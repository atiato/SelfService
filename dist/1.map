{"version":3,"sources":["webpack:///1.chunk.js","webpack:///./src/app/selfservice/selfservice.module.ts","webpack:///./src/app/selfservice/tasklist.component.ts","webpack:///./src/app/selfservice/loanrequest.component.ts","webpack:///./src/app/selfservice/loanrequest.component.html","webpack:///./src/app/selfservice/leaverequest.component.ts","webpack:///./src/app/selfservice/leaverequest.component.html","webpack:///./src/app/selfservice/selfservice-module.routing.ts","webpack:///./src/app/selfservice/index.ts","webpack:///./src/app/selfservice/taskdetails.component.ts","webpack:///./src/app/selfservice/taskdetails.component.html","webpack:///./src/app/selfservice/tasklist2.component.ts"],"names":["webpackJsonp","638","module","exports","__webpack_require__","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","value","core_1","shared_1","tasklist_component_1","loanrequest_component_1","leaverequest_component_1","selfservice_module_routing_1","taskdetails_component_1","tasklist2_component_1","SelfServiceModule","NgModule","imports","SharedModule","SelfServiceRoutingModule","declarations","TaskListComponent","TaskList2Component","LoanRequestComponent","LeaveRequestComponent","TaskDetailsComponent","639","__metadata","k","v","metadata","services_1","services_2","main_1","router_1","material_1","workflowService","route","router","snackBar","selfServiceStore","storeHelper","_this","columnDefs","checkboxSelection","headerCheckboxSelection","width","maxWidth","headerName","field","filterParams","newRowsAction","filter","valueGetter","computeFromDate","comparator","dateComparator","apply","filterLocalDateAtMidnight","cellValue","dateAsString","dateParts","split","cellDate","Date","Number","getTime","computeToDate","gridOptions","rowData","api","enableSorting","rowHeight","headerHeight","enableFilter","index","subscription","workflowTasksChanges","subscribe","tasks","params","map","id","selectedTask","len","TaskId","indexOf","splice","setRowData","prototype","openSnackBar","open","duration","ngOnInit","LicenseManager","setLicenseKey","getPendingTasks","ngDoCheck","console","log","ngOnDestroy","unsubscribe","date1","date2","monthToComparableNumber","date","undefined","yearNumber","substring","monthNumber","dayNumber","result","date1Number","date2Number","convertDate","inputFormat","pad","s","getDate","getMonth","getFullYear","join","fromDate","data","FromDate","ToDate","onRowSelected","onRowClicked","event","taskId","instanceId","InstanceId","navigate","isButtonDisabled","btnDisabled","getSelectedNodes","approveRequests","nodes","getSelectedTasks","rejectRequests","isApproved","selectedNodes","removeItems","task","IsApproved","PersonId","push","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","WorkflowService","ActivatedRoute","Router","MdSnackBar","SelfServiceStore","StoreHelper","640","newservice_1","selfServiceService","newService","employeeBalance","getEmployeeBalance","submitRequest","properties","name","SelfServiceService","NewService","641","642","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","constructor","create","store_1","rxjs_1","angular2localization_1","SuperClass","_super","locale","localization","call","translationProvider","updateTranslation","Locale","store","leaveSubmited","leaveTypes","userBalance","Observable","of","employeeDayDuty","isBtnDisabled","onLeaveTypeChange","leaveTypeId","getUserBalance","getAttendanceTypes","onBlurMethod","toDate","getEmployeeDayDuty","toString","Store","LocaleService","LocalizationService","643","644","selfservice_1","routes","path","component","RouterModule","forChild","645","selfservice_module_1","646","taskDetailsChanges","instance","snapshot","getRequestDetails","approveRequest","getTask","rejectRequest","taskDetails","next","647","648","gridData","Input"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAASC,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GCZvD,IAAAC,GAAAnB,EAAA,GAEAoB,EAAApB,EAAA,KACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KACAyB,EAAAzB,EAAA,KACA0B,EAAA1B,EAAA,KAOa2B,EAAiB,WAA9B,QAAAA,MAAiC,MAAAA,KAApBA,GAAiB1B,GAJ7BkB,EAAAS,UACGC,SAAUT,EAAAU,aAAcN,EAAAO,0BACxBC,cAAeX,EAAAY,kBAAmBP,EAAAQ,mBAAoBZ,EAAAa,qBAAsBZ,EAAAa,sBAAuBX,EAAAY,yBAE1FV,GAAA5B,EAAA4B,qBDsBPW,IACA,SAASxC,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5D4B,EAAcrC,MAAQA,KAAKqC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ3B,UAAoD,kBAArBA,SAAQ4B,SAAyB,MAAO5B,SAAQ4B,SAASF,EAAGC,GAE1G7B,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GElDvD,IAAAC,GAAAnB,EAAA,GACA2C,EAAA3C,EAAA,IAEA4C,EAAA5C,EAAA,IACA6C,EAAA7C,EAAA,KAEA8C,EAAA9C,EAAA,IACA+C,EAAA/C,EAAA,IACAA,GAAA,IAgCA,IAAaiC,GAAiB,WAK1B,QAAAA,GAAoBe,EACRC,EACAC,EACDC,EACCC,EACAC,GALZ,GAAAC,GAAApD,IAAoBA,MAAA8C,kBACR9C,KAAA+C,QACA/C,KAAAgD,SACDhD,KAAAiD,WACCjD,KAAAkD,mBACAlD,KAAAmD,cAkEZnD,KAAAqD,aACMC,mBAAmB,EAAMC,yBAAyB,EAAMC,MAAO,GAAIC,SAAU,KAC7EC,WAAY,aAAcC,MAAO,YAAaC,cAAgBC,cAAe,UAC7EH,WAAY,cAAeC,MAAO,aAAcC,cAAgBC,cAAe,UAC/EH,WAAY,MAAOC,MAAO,YAAaC,cAAgBC,cAAe,UAEpEH,WAAY,YAAaI,OAAQ,OACjCC,YAAa/D,KAAKgE,gBAClBC,WAAYjE,KAAKkE,eACjBN,cACIC,cAAe,OACfM,OAAO,EACPF,WAAY,SAAUG,EAA2BC,GAC7C,GAAIC,GAAeD,EACfE,EAAYD,EAAaE,MAAM,KAC/BC,EAAW,GAAIC,MAAKC,OAAOJ,EAAU,IAAKI,OAAOJ,EAAU,IAAM,EAAGI,OAAOJ,EAAU,IAEzF,OAAIH,GAA0BQ,WAAaH,EAASG,UACzC,EAGPH,EAAWL,GACJ,EAGPK,EAAWL,EACJ,EADX,WAMVV,WAAY,UAAWK,YAAa/D,KAAK6E,cAAeZ,WAAYjE,KAAKkE,eAAgBN,cAAgBC,cAAe,UACxHH,WAAY,SAAUC,MAAO,oBAAqBC,cAAgBC,cAAe,UAiCvF7D,KAAA8E,aACIzB,WAAYrD,KAAKqD,WACjB0B,QAAS,KACTC,IAAK,KACLC,eAAe,EACfC,UAAW,GACXC,aAAc,GACdC,cAAc,GA6DlBpF,KAAAqF,MAAgB,EArMZrF,KAAKsF,aAAetF,KAAKkD,iBAAiBqC,qBAAqBC,UAAU,SAAAC,GACjEA,GACIrC,EAAK0B,aAAe1B,EAAK0B,YAAYE,MAErC5B,EAAKL,MAAM2C,OACNC,IAAI,SAAAD,GAAU,MAAAA,GAAW,KACzBF,UAAU,SAACI,GAER,IAAK,GADDC,GACK/E,EAAI,EAAGgF,EAAML,EAAMjF,OAAQM,EAAIgF,EAAKhF,IACzC,GAAI2E,EAAM3E,GAAGiF,QAAUH,EAAI,CACvBC,EAAeJ,EAAM3E,EACrB,OAIR,GAAI+E,EAAc,CACd,GAAIR,GAAgBI,EAAMO,QAAQH,EAClCJ,GAAMQ,OAAOZ,EAAO,MAIhCjC,EAAK0B,YAAYE,IAAIkB,WAAWT,MA6NpD,MAlNI1D,GAAAoE,UAAAC,aAAA,WACIpG,KAAKiD,SAASoD,KAAK,oBAAqB,IACpCC,SAAU,OASlBvE,EAAAoE,UAAAI,SAAA,WACI5D,EAAA6D,eAAeC,cAAc,0GAI7BzG,KAAK8C,gBAAgB4D,mBAOzB3E,EAAAoE,UAAAQ,UAAA,WACIC,QAAQC,IAAI,2BAGhB9E,EAAAoE,UAAAW,YAAA,WACI9G,KAAKsF,aAAayB,eAuCtBhF,EAAAoE,UAAAjC,eAAA,SAAe8C,EAAOC,GAClB,QAAAC,GAAiCC,GAC7B,GAAaC,SAATD,GAA+B,OAATA,GAAiC,KAAhBA,EAAK3G,OAC5C,MAAO,KAGX,IAAI6G,GAAaF,EAAKG,UAAU,EAAG,IAC/BC,EAAcJ,EAAKG,UAAU,EAAG,GAChCE,EAAYL,EAAKG,UAAU,EAAG,GAE9BG,EAAuB,IAAbJ,EAAqC,IAAdE,EAAqBC,CAC1D,OAAOC,GAGX,GAAIC,GAAcR,EAAwBF,GACtCW,EAAcT,EAAwBD,EAE1C,OAAoB,QAAhBS,GAAwC,OAAhBC,EACjB,EAES,OAAhBD,GACO,EAES,OAAhBC,EACO,EAGJD,EAAcC,GAkBzB5F,EAAAoE,UAAAnC,gBAAA,SAAgB0B,GACZ,QAAAkC,GAAqBC,GACjB,QAAAC,GAAaC,GACT,MAAQA,GAAI,GAAM,IAAMA,EAAIA,EAEhC,GAAI1H,GAAI,GAAIqE,MAAKmD,EACjB,QAAQC,EAAIzH,EAAE2H,WAAYF,EAAIzH,EAAE4H,WAAa,GAAI5H,EAAE6H,eAAeC,KAAK,KAG3E,GAAIC,GAAW1C,EAAO2C,KAAKC,QAC3B,OAAOV,GAAYQ,IAGvBrG,EAAAoE,UAAAtB,cAAA,SAAca,GACV,QAAAkC,GAAqBC,GACjB,QAAAC,GAAaC,GACT,MAAQA,GAAI,GAAM,IAAMA,EAAIA,EAEhC,GAAI1H,GAAI,GAAIqE,MAAKmD,EACjB,QAAQC,EAAIzH,EAAE2H,WAAYF,EAAIzH,EAAE4H,WAAa,GAAI5H,EAAE6H,eAAeC,KAAK,KAG3E,GAAIC,GAAW1C,EAAO2C,KAAKE,MAC3B,OAAOX,GAAYQ,IAmBvBrG,EAAAoE,UAAAqC,cAAA,aAIAzG,EAAAoE,UAAAsC,aAAA,SAAaC,GACT,GAAIC,GAASD,EAAML,KAAKtC,OACpB6C,EAAaF,EAAML,KAAKQ,UAE5B7I,MAAKgD,OAAO8F,UAAU,mBAAoB,cAAeH,EAAQC,KAIrE7G,EAAAoE,UAAA4C,iBAAA,WAII,MAHA/I,MAAKqF,QACLuB,QAAQC,IAAO7G,KAAKqF,MAAK,wBAErBrF,KAAK8E,aAAe9E,KAAK8E,YAAYE,KACrChF,KAAKgJ,aAAc,IACVhJ,KAAK8E,YAAYE,IAAIiE,mBAAmBzI,OAAS,KAG1DR,KAAKgJ,aAAc,GACZ,IAIfjH,EAAAoE,UAAA+C,gBAAA,WACI,GAAIC,GAAenJ,KAAKoJ,kBAAiB,EACzCpJ,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,aAGhDzD,EAAAoE,UAAAkD,eAAA,WACI,GAAIF,GAAenJ,KAAKoJ,kBAAiB,EACzCpJ,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,aAGhDzD,EAAAoE,UAAAiD,iBAAA,SAAiBE,GACb,GAAIC,GAA2BvJ,KAAK8E,YAAYE,IAAIiE,kBAGpDjJ,MAAK8E,YAAYE,IAAIwE,YAAYD,EAMjC,KAAK,GAFD9D,MAEK3E,EAAI,EAAGA,EAAIyI,EAAc/I,OAAQM,IAAK,CAC3C,GAAIuH,GAAOkB,EAAczI,GAAGuH,KAExBoB,GAAS1D,OAAUsC,EAAKtC,OAAQ2D,WAAcJ,EAAYT,WAAcR,EAAKQ,WAAYc,SAAYtB,EAAKsB,SAE9GlE,GAAMmE,KAAKH,GAGf,MAAOhE,IAEf1D,IA9PaA,GAAiBhC,GA9B7BkB,EAAA4I,WACGC,SAAU,YACVC,gBAAiB9I,EAAA+I,wBAAwBC,OACzCC,QAAS,iGAKTC,SAAU,8vCFgQT9H,EAAW,qBErOyBI,EAAA2H,gBAClBxH,EAAAyH,eACCzH,EAAA0H,OACCzH,EAAA0H,WACS7H,EAAA8H,iBACL9H,EAAA+H,eAVhB1I,GAAAlC,EAAAkC,qBFsPP2I,IACA,SAAS9K,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5D4B,EAAcrC,MAAQA,KAAKqC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ3B,UAAoD,kBAArBA,SAAQ4B,SAAyB,MAAO5B,SAAQ4B,SAASF,EAAGC,GAE1G7B,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GG3SvD,IAAAC,GAAAnB,EAAA,GAEA2C,EAAA3C,EAAA,IACA6K,EAAA7K,EAAA,KAMamC,EAAoB,WAC7B,QAAAA,GAAoB2I,EAAgDC,GAAhD7K,KAAA4K,qBAAgD5K,KAAA6K,aAiBxE,MAZI5I,GAAAkE,UAAAI,SAAA,WACIvG,KAAK8K,gBAAkB9K,KAAK6K,WAAWE,sBAG3C9I,EAAAkE,UAAA6E,cAAA,WACI,GAAIC,KACJA,GAAWrB,MAAOsB,KAAM,SAAUlK,MAAO,SACzCiK,EAAWrB,MAAOsB,KAAM,YAAalK,MAAO,yCAC5CiK,EAAWrB,MAAOsB,KAAM,YAAalK,MAAO,SAE5ChB,KAAK4K,mBAAmBI,cAAc,uCAAwC,uCAAwCC,GAAYzF,aAE1IvD,IAlBaA,GAAoBlC,GAJhCkB,EAAA4I,WACGC,SAAU,eACVK,SAAUrK,EAAQ,OH8TjBuC,EAAW,qBG3T4BI,EAAA0I,mBAAwCR,EAAAS,cADvEnJ,GAAApC,EAAAoC,wBHmUPoJ,IACA,SAASzL,EAAQC,GI7UvBD,EAAAC,QAAA,4jDJmVMyL,IACA,SAAS1L,EAAQC,EAASC,GAE/B,YACA,IAAIyL,GAAavL,MAAQA,KAAKuL,WAAc,WACxC,GAAIC,GAAgB9K,OAAO+K,iBACpBC,uBAA2BC,QAAS,SAAUtL,EAAGuL,GAAKvL,EAAEqL,UAAYE,IACvE,SAAUvL,EAAGuL,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIxL,EAAEwL,GAAKD,EAAEC,IACzE,OAAO,UAAUxL,EAAGuL,GAEhB,QAASG,KAAO/L,KAAKgM,YAAc3L,EADnCmL,EAAcnL,EAAGuL,GAEjBvL,EAAE8F,UAAkB,OAANyF,EAAalL,OAAOuL,OAAOL,IAAMG,EAAG5F,UAAYyF,EAAEzF,UAAW,GAAI4F,QAGnFhM,EAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5D4B,EAAcrC,MAAQA,KAAKqC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ3B,UAAoD,kBAArBA,SAAQ4B,SAAyB,MAAO5B,SAAQ4B,SAASF,EAAGC,GAE1G7B,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GK1WvD,IAAAC,GAAAnB,EAAA,GAEA2C,EAAA3C,EAAA,IACAoM,EAAApM,EAAA,IACA4C,EAAA5C,EAAA,IACAqM,EAAArM,EAAA,GACAA,GAAA,GACA,IAAAsM,GAAAtM,EAAA,KAEAuM,EAAA,SAAAC,GACI,QAAAD,GAAmBE,EAA8BC,GAAjD,GAAApJ,GACIkJ,EAAAG,KAAAzM,KAAMuM,EAAQC,IAAaxM,IL+W1B,OKhXcoD,GAAAmJ,SAA8BnJ,EAAAoJ,eAG7CpJ,EAAKoJ,aAAaE,oBAAoB,uBACtCtJ,EAAKoJ,aAAaG,oBL4WVvJ,EKxWhB,MATgCmI,GAAAc,EAAAC,GAShCD,GATgCD,EAAAQ,OAAnB/M,GAAAwM,YAgBb,IAAanK,GAAqB,SAAAoK,GAiB9B,QAAApK,GAAoB0I,EAAgD1H,EACxD2J,EAAqBN,EAA8BC,GAD/D,GAAApJ,GAEIkJ,EAAAG,KAAAzM,KAAMuM,EAAQC,IAAaxM,ILmW1B,OKrWeoD,GAAAwH,qBAAgDxH,EAAAF,mBACxDE,EAAAyJ,QAAqBzJ,EAAAmJ,SAA8BnJ,EAAAoJ,eAjB/DpJ,EAAA0J,eAAyB,EAEzB1J,EAAA2J,cAkBI3J,EAAKF,iBAAiB8J,YAAcb,EAAAc,WAAWC,GAAG,GAClD9J,EAAKF,iBAAiBiK,gBAAkBhB,EAAAc,WAAWC,GAAG,GAEtD9J,EAAKoJ,aAAaE,oBAAoB,uBACtCtJ,EAAKoJ,aAAaG,oBL6VVvJ,EKzThB,MA7D2CmI,GAAArJ,EAAAoK,GASvCpK,EAAAiE,UAAAiH,cAAA,WACI,OAAO,GAGXlL,EAAAiE,UAAAQ,UAAA,WACIC,QAAQC,IAAI,aAchB3E,EAAAiE,UAAAkH,kBAAA,SAAkBC,GACdtN,KAAK4K,mBAAmB2C,eAAeD,GAAa9H,aAGxDtD,EAAAiE,UAAAI,SAAA,WACIvG,KAAK4K,mBAAmB4C,qBAAqBhI,aAGjDtD,EAAAiE,UAAAsH,aAAA,WACQzN,KAAKsN,aAAetN,KAAKoI,UAAYpI,KAAK0N,QAC1C1N,KAAK4K,mBAAmB+C,mBAAmB3N,KAAKsN,YAAatN,KAAKoI,SAAUpI,KAAK0N,QAAQlI,aAIjGtD,EAAAiE,UAAAW,YAAA,aAIA5E,EAAAiE,UAAA6E,cAAA,WACI,GAAIC,KACJA,GAAWrB,MAAOsB,KAAM,UAAWlK,MAAOhB,KAAKkD,iBAAiBiK,gBAAgBS,aAChF3C,EAAWrB,MAAOsB,KAAM,WAAYlK,MAAOhB,KAAKoI,WAChD6C,EAAWrB,MAAOsB,KAAM,SAAUlK,MAAOhB,KAAK0N,SAC9CzC,EAAWrB,MAAOsB,KAAM,kBAAmBlK,MAAOhB,KAAKkD,iBAAiBiK,gBAAgBS,aACxF3C,EAAWrB,MAAOsB,KAAM,UAAWlK,MAAO,MAC1CiK,EAAWrB,MAAOsB,KAAM,UAAWlK,MAAOhB,KAAKkD,iBAAiB8J,YAAYY,aAC5E3C,EAAWrB,MAAOsB,KAAM,YAAalK,MAAOhB,KAAKsN,cACjDrC,EAAWrB,MAAOsB,KAAM,UAAWlK,MAAO,iCAE1ChB,KAAK4K,mBAAmBI,cAAc,uCAAwC,uCAAwCC,GAAYzF,YAElIxF,KAAK8M,eAAiB9M,KAAK8M,eAEnC5K,GA7D2CmK,EAA9BnK,GAAqBnC,GALjCkB,EAAA4I,WACGC,SAAU,gBACVC,gBAAiB9I,EAAA+I,wBAAwBC,OACzCE,SAAUrK,EAAQ,OLkajBuC,EAAW,qBK/Y4BI,EAAA0I,mBAA8CzI,EAAA8H,iBACnE0B,EAAA2B,MAAsBzB,EAAA0B,cAAoC1B,EAAA2B,uBAlBpE7L,GAAArC,EAAAqC,yBLwaP8L,IACA,SAASpO,EAAQC,GMlcvBD,EAAAC,QAAA,k6ENwcMoO,IACA,SAASrO,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GOldvD,IAAAC,GAAAnB,EAAA,GACA8C,EAAA9C,EAAA,IACAoO,EAAApO,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAyB,EAAAzB,EAAA,KACA0B,EAAA1B,EAAA,KAEMqO,IACAC,KAAM,WAAYC,UAAWH,EAAAnM,oBAC7BqM,KAAM,YAAaC,UAAW7M,EAAAQ,qBAC9BoM,KAAM,eAAgBC,UAAWhN,EAAAa,wBACjCkM,KAAM,cAAeC,UAAWjN,EAAAa,uBAChCmM,KAAM,kCAAmCC,UAAW9M,EAAAY,uBAO7CN,EAAwB,WAArC,QAAAA,MAAwC,MAAAA,KAA3BA,GAAwB9B,GAJpCkB,EAAAS,UACGC,SAAUiB,EAAA0L,aAAaC,SAASJ,IAChCtO,SAAU+C,EAAA0L,iBAEDzM,GAAAhC,EAAAgC,4BP6dP2M,IACA,SAAS5O,EAAQC,EAASC,GAE/B,YACAY,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GQrfvD,IAAAyN,GAAA3O,EAAA,IAASD,GAAA4B,kBAAAgN,EAAAhN,iBACT,IAAAH,GAAAxB,EAAA,IAASD,GAAAgC,yBAAAP,EAAAO,wBACT,IAAAV,GAAArB,EAAA,IAASD,GAAAkC,kBAAAZ,EAAAY,iBACT,IAAAX,GAAAtB,EAAA,IAASD,GAAAoC,qBAAAb,EAAAa,oBACT,IAAAZ,GAAAvB,EAAA,IAASD,GAAAqC,sBAAAb,EAAAa,uBRggBHwM,IACA,SAAS9O,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5D4B,EAAcrC,MAAQA,KAAKqC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ3B,UAAoD,kBAArBA,SAAQ4B,SAAyB,MAAO5B,SAAQ4B,SAASF,EAAGC,GAE1G7B,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GSjhBvD,IAAAC,GAAAnB,EAAA,GACA2C,EAAA3C,EAAA,IAEA4C,EAAA5C,EAAA,IAEA8C,EAAA9C,EAAA,IAUaqC,EAAoB,WAI7B,QAAAA,GAAoBW,EACRC,EACAC,EACAE,EACAC,GAJZ,GAAAC,GAAApD,IAAoBA,MAAA8C,kBACR9C,KAAA+C,QACA/C,KAAAgD,SACAhD,KAAAkD,mBACAlD,KAAAmD,cAERnD,KAAKkD,iBAAiByL,mBAAmBnJ,UAAU,SAAAoJ,GAC/CxL,EAAKwL,SAAWA,IAqC5B,MAjCIzM,GAAAgE,UAAAI,SAAA,WACIvG,KAAK2I,OAAS3I,KAAK+C,MAAM8L,SAASnJ,OAAe,MACjD,IAAIkD,GAAa5I,KAAK+C,MAAM8L,SAASnJ,OAAmB,UAExD1F,MAAK8C,gBAAgBgM,kBAAkBlG,EAAY5I,KAAK2I,SAG5DxG,EAAAgE,UAAA4I,eAAA,WACI,GAAI5F,GAAenJ,KAAKgP,SAAQ,EAChChP,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,YAE5CxF,KAAKgD,OAAO8F,UAAU,mBAAoB,YAAclD,GAAI5F,KAAK2I,WAGrExG,EAAAgE,UAAA8I,cAAA,WACI,GAAI9F,GAAenJ,KAAKgP,SAAQ,EAChChP,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,YAE5CxF,KAAKgD,OAAO8F,UAAU,mBAAoB,YAAclD,GAAI5F,KAAK2I,WAGrExG,EAAAgE,UAAA6I,QAAA,SAAQ1F,GACJ,GAAI7D,MAEAgE,GAAS1D,OAAU/F,KAAK2I,OAAQe,WAAcJ,EAAYT,WAAc7I,KAAK4O,SAAS/F,WAAYc,SAAY3J,KAAK4O,SAASjF,SAGhI,OAFAlE,GAAMmE,KAAKH,GAEJhE,GAGXtD,EAAAgE,UAAAW,YAAA,WACI9G,KAAKkD,iBAAiBgM,YAAYC,UAE1ChN,IAhDaA,GAAoBpC,GARhCkB,EAAA4I,WACGC,SAAU,cACVK,SAAUrK,EAAQ,KAClBoK,QAAS,wJTwjBR7H,EAAW,qBS/iByBI,EAAA2H,gBAClBxH,EAAAyH,eACCzH,EAAA0H,OACU5H,EAAA8H,iBACL9H,EAAA+H,eARhBtI,GAAAtC,EAAAsC,wBT8jBPiN,IACA,SAASxP,EAAQC,GU9kBvBD,EAAAC,QAAA,0+GVolBMwP,IACA,SAASzP,EAAQC,EAASC,GAE/B,YACA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5D4B,EAAcrC,MAAQA,KAAKqC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ3B,UAAoD,kBAArBA,SAAQ4B,SAAyB,MAAO5B,SAAQ4B,SAASF,EAAGC,GAE1G7B,QAAOK,eAAelB,EAAS,cAAgBmB,OAAO,GWjmBvD,IAAAC,GAAAnB,EAAA,GACA2C,EAAA3C,EAAA,IAEA4C,EAAA5C,EAAA,IAGA8C,EAAA9C,EAAA,IACA+C,EAAA/C,EAAA,IACAA,GAAA,IAuCA,IAAakC,GAAkB,WAQ3B,QAAAA,GAAoBc,EACRC,EACAC,EACDC,EACCC,EACAC,GALZ,GAAAC,GAAApD,IAAoBA,MAAA8C,kBACR9C,KAAA+C,QACA/C,KAAAgD,SACDhD,KAAAiD,WACCjD,KAAAkD,mBACAlD,KAAAmD,cAPJnD,KAAAsP,YA2ERtP,KAAAqD,aACMC,mBAAmB,EAAMC,yBAAyB,EAAMC,MAAO,GAAIC,SAAU,KAC7EC,WAAY,aAAcC,MAAO,YAAaC,cAAgBC,cAAe,UAC7EH,WAAY,cAAeC,MAAO,aAAcC,cAAgBC,cAAe,UAC/EH,WAAY,MAAOC,MAAO,YAAaC,cAAgBC,cAAe,UAEpEH,WAAY,YAAaI,OAAQ,OACjCC,YAAa/D,KAAKgE,gBAClBC,WAAYjE,KAAKkE,eACjBN,cACIC,cAAe,OACfM,OAAO,EACPF,WAAY,SAAUG,EAA2BC,GAC7C,GAAIC,GAAeD,EACfE,EAAYD,EAAaE,MAAM,KAC/BC,EAAW,GAAIC,MAAKC,OAAOJ,EAAU,IAAKI,OAAOJ,EAAU,IAAM,EAAGI,OAAOJ,EAAU,IAEzF,OAAIH,GAA0BQ,WAAaH,EAASG,UACzC,EAGPH,EAAWL,GACJ,EAGPK,EAAWL,EACJ,EADX,WAMVV,WAAY,UAAWK,YAAa/D,KAAK6E,cAAeZ,WAAYjE,KAAKkE,eAAgBN,cAAgBC,cAAe,UACxHH,WAAY,SAAUC,MAAO,oBAAqBC,cAAgBC,cAAe,UAiCvF7D,KAAA8E,aACIzB,WAAYrD,KAAKqD,WACjB0B,QAAS,KACTC,IAAK,KACLC,eAAe,EACfC,UAAW,GACXC,aAAc,GACdC,cAAc,GA6ClBpF,KAAAqF,MAAgB,EAvLZrF,KAAKsF,aAAetF,KAAKkD,iBAAiBqC,qBAAqBC,UAAU,SAAAC,GACjEA,IAGIrC,EAAKL,MAAM2C,OACNC,IAAI,SAAAD,GAAU,MAAAA,GAAW,KACzBF,UAAU,SAACI,GAER,IAAK,GADDC,GACK/E,EAAI,EAAGgF,EAAML,EAAMjF,OAAQM,EAAIgF,EAAKhF,IACzC,GAAI2E,EAAM3E,GAAGiF,QAAUH,EAAI,CACvBC,EAAeJ,EAAM3E,EACrB,OAIR,GAAI+E,EAAc,CACd,GAAIR,GAAgBI,EAAMO,QAAQH,EAClCJ,GAAMQ,OAAOZ,EAAO,MAIhCjC,EAAKkM,SAAW7J,KA+MpC,MAlMIzD,GAAAmE,UAAAC,aAAA,WACIpG,KAAKiD,SAASoD,KAAK,oBAAqB,IACpCC,SAAU,OASlBtE,EAAAmE,UAAAI,SAAA,WAKIvG,KAAK8C,gBAAgB4D,mBAOzB1E,EAAAmE,UAAAQ,UAAA,WACIC,QAAQC,IAAI,2BAGhB7E,EAAAmE,UAAAW,YAAA,WACI9G,KAAKsF,aAAayB,eAuCtB/E,EAAAmE,UAAAjC,eAAA,SAAe8C,EAAOC,GAClB,QAAAC,GAAiCC,GAC7B,GAAaC,SAATD,GAA+B,OAATA,GAAiC,KAAhBA,EAAK3G,OAC5C,MAAO,KAGX,IAAI6G,GAAaF,EAAKG,UAAU,EAAG,IAC/BC,EAAcJ,EAAKG,UAAU,EAAG,GAChCE,EAAYL,EAAKG,UAAU,EAAG,GAE9BG,EAAuB,IAAbJ,EAAqC,IAAdE,EAAqBC,CAC1D,OAAOC,GAGX,GAAIC,GAAcR,EAAwBF,GACtCW,EAAcT,EAAwBD,EAE1C,OAAoB,QAAhBS,GAAwC,OAAhBC,EACjB,EAES,OAAhBD,GACO,EAES,OAAhBC,EACO,EAGJD,EAAcC,GAkBzB3F,EAAAmE,UAAAnC,gBAAA,SAAgB0B,GACZ,QAAAkC,GAAqBC,GACjB,QAAAC,GAAaC,GACT,MAAQA,GAAI,GAAM,IAAMA,EAAIA,EAEhC,GAAI1H,GAAI,GAAIqE,MAAKmD,EACjB,QAAQC,EAAIzH,EAAE2H,WAAYF,EAAIzH,EAAE4H,WAAa,GAAI5H,EAAE6H,eAAeC,KAAK,KAG3E,GAAIC,GAAW1C,EAAO2C,KAAKC,QAC3B,OAAOV,GAAYQ,IAGvBpG,EAAAmE,UAAAtB,cAAA,SAAca,GACV,QAAAkC,GAAqBC,GACjB,QAAAC,GAAaC,GACT,MAAQA,GAAI,GAAM,IAAMA,EAAIA,EAEhC,GAAI1H,GAAI,GAAIqE,MAAKmD,EACjB,QAAQC,EAAIzH,EAAE2H,WAAYF,EAAIzH,EAAE4H,WAAa,GAAI5H,EAAE6H,eAAeC,KAAK,KAG3E,GAAIC,GAAW1C,EAAO2C,KAAKE,MAC3B,OAAOX,GAAYQ,IAGvBpG,EAAAmE,UAAAqC,cAAA,aAIAxG,EAAAmE,UAAAsC,aAAA,SAAaC,GACT,GAAIC,GAASD,EAAML,KAAKtC,OACpB6C,EAAaF,EAAML,KAAKQ,UAE5B7I,MAAKgD,OAAO8F,UAAU,mBAAoB,cAAeH,EAAQC,KAIrE5G,EAAAmE,UAAA4C,iBAAA,WAII,MAHA/I,MAAKqF,QACLuB,QAAQC,IAAO7G,KAAKqF,MAAK,wBAErBrF,KAAK8E,aAAe9E,KAAK8E,YAAYE,KACrChF,KAAKgJ,aAAc,IACVhJ,KAAK8E,YAAYE,IAAIiE,mBAAmBzI,OAAS,KAG1DR,KAAKgJ,aAAc,GACZ,IAIfhH,EAAAmE,UAAA+C,gBAAA,WACI,GAAIC,GAAenJ,KAAKoJ,kBAAiB,EACzCpJ,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,aAGhDxD,EAAAmE,UAAAkD,eAAA,WACI,GAAIF,GAAenJ,KAAKoJ,kBAAiB,EACzCpJ,MAAK8C,gBAAgBoG,gBAAgBC,GAAO3D,aAGhDxD,EAAAmE,UAAAiD,iBAAA,SAAiBE,GACb,GAAIC,GAA2BvJ,KAAK8E,YAAYE,IAAIiE,kBAGpDjJ,MAAK8E,YAAYE,IAAIwE,YAAYD,EAMjC,KAAK,GAFD9D,MAEK3E,EAAI,EAAGA,EAAIyI,EAAc/I,OAAQM,IAAK,CAC3C,GAAIuH,GAAOkB,EAAczI,GAAGuH,KAExBoB,GAAS1D,OAAUsC,EAAKtC,OAAQ2D,WAAcJ,EAAYT,WAAcR,EAAKQ,WAAYc,SAAYtB,EAAKsB,SAE9GlE,GAAMmE,KAAKH,GAGf,MAAOhE,IAEfzD,IA7OIjC,IADCkB,EAAAsO,QX2vBAlN,EAAW,cAAesJ,QAC3B3J,EAAmBmE,UAAW,WAAY,QWjwBjCnE,EAAkBjC,GArC9BkB,EAAA4I,WACGC,SAAU,aACVC,gBAAiB9I,EAAA+I,wBAAwBC,OACzCC,QAAS,iGAKTC,SAAU,khDXuyBT9H,EAAW,qBWlwByBI,EAAA2H,gBAClBxH,EAAAyH,eACCzH,EAAA0H,OACCzH,EAAA0H,WACS7H,EAAA8H,iBACL9H,EAAA+H,eAbhBzI,GAAAnC,EAAAmC","file":"1.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 638:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar shared_1 = __webpack_require__(379);\r\n\tvar tasklist_component_1 = __webpack_require__(639);\r\n\tvar loanrequest_component_1 = __webpack_require__(640);\r\n\tvar leaverequest_component_1 = __webpack_require__(642);\r\n\tvar selfservice_module_routing_1 = __webpack_require__(644);\r\n\tvar taskdetails_component_1 = __webpack_require__(646);\r\n\tvar tasklist2_component_1 = __webpack_require__(648);\r\n\tvar SelfServiceModule = (function () {\r\n\t    function SelfServiceModule() {\r\n\t    }\r\n\t    return SelfServiceModule;\r\n\t}());\r\n\tSelfServiceModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [shared_1.SharedModule, selfservice_module_routing_1.SelfServiceRoutingModule],\r\n\t        declarations: [tasklist_component_1.TaskListComponent, tasklist2_component_1.TaskList2Component, loanrequest_component_1.LoanRequestComponent, leaverequest_component_1.LeaveRequestComponent, taskdetails_component_1.TaskDetailsComponent]\r\n\t    })\r\n\t], SelfServiceModule);\r\n\texports.SelfServiceModule = SelfServiceModule;\r\n\n\n/***/ },\n\n/***/ 639:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(41);\r\n\tvar services_2 = __webpack_require__(41);\r\n\tvar main_1 = __webpack_require__(585);\r\n\tvar router_1 = __webpack_require__(43);\r\n\tvar material_1 = __webpack_require__(626);\r\n\t__webpack_require__(299);\r\n\tvar TaskListComponent = (function () {\r\n\t    function TaskListComponent(workflowService, route, router, snackBar, selfServiceStore, storeHelper) {\r\n\t        var _this = this;\r\n\t        this.workflowService = workflowService;\r\n\t        this.route = route;\r\n\t        this.router = router;\r\n\t        this.snackBar = snackBar;\r\n\t        this.selfServiceStore = selfServiceStore;\r\n\t        this.storeHelper = storeHelper;\r\n\t        this.columnDefs = [\r\n\t            { checkboxSelection: true, headerCheckboxSelection: true, width: 30, maxWidth: 30 },\r\n\t            { headerName: 'Leave Type', field: 'LeaveType', filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Person Name', field: 'PersonName', filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Job', field: 'PersonJob', filterParams: { newRowsAction: 'keep' } },\r\n\t            {\r\n\t                headerName: 'From Date', filter: 'date',\r\n\t                valueGetter: this.computeFromDate,\r\n\t                comparator: this.dateComparator,\r\n\t                filterParams: {\r\n\t                    newRowsAction: 'keep',\r\n\t                    apply: true,\r\n\t                    comparator: function (filterLocalDateAtMidnight, cellValue) {\r\n\t                        var dateAsString = cellValue;\r\n\t                        var dateParts = dateAsString.split(\"/\");\r\n\t                        var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\r\n\t                        if (filterLocalDateAtMidnight.getTime() == cellDate.getTime()) {\r\n\t                            return 0;\r\n\t                        }\r\n\t                        if (cellDate < filterLocalDateAtMidnight) {\r\n\t                            return -1;\r\n\t                        }\r\n\t                        if (cellDate > filterLocalDateAtMidnight) {\r\n\t                            return 1;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            { headerName: 'To Date', valueGetter: this.computeToDate, comparator: this.dateComparator, filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Status', field: 'TaskStatusDisplay', filterParams: { newRowsAction: 'keep' } }\r\n\t        ];\r\n\t        this.gridOptions = {\r\n\t            columnDefs: this.columnDefs,\r\n\t            rowData: null,\r\n\t            api: null,\r\n\t            enableSorting: true,\r\n\t            rowHeight: 32,\r\n\t            headerHeight: 32,\r\n\t            enableFilter: true //,\r\n\t            //paginationPageSize: 10,\r\n\t            //animateRows: true//,\r\n\t            //rowModelType: 'pagination'\r\n\t            //enableServerSideSorting: true,\r\n\t            //enableServerSideFilter: true\r\n\t        };\r\n\t        this.index = 0;\r\n\t        this.subscription = this.selfServiceStore.workflowTasksChanges.subscribe(function (tasks) {\r\n\t            if (tasks) {\r\n\t                if (_this.gridOptions && _this.gridOptions.api) {\r\n\t                    _this.route.params\r\n\t                        .map(function (params) { return params['id']; })\r\n\t                        .subscribe(function (id) {\r\n\t                        var selectedTask;\r\n\t                        for (var i = 0, len = tasks.length; i < len; i++) {\r\n\t                            if (tasks[i].TaskId == id) {\r\n\t                                selectedTask = tasks[i];\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                        if (selectedTask) {\r\n\t                            var index = tasks.indexOf(selectedTask);\r\n\t                            tasks.splice(index, 1);\r\n\t                        }\r\n\t                    });\r\n\t                    _this.gridOptions.api.setRowData(tasks);\r\n\t                }\r\n\t                //else {\r\n\t                //this.rowData = tasks;\r\n\t                //console.log('tasks filled...');\r\n\t                //setTimeout('this.gridOptions.api.setRowData(tasks);', 1000);\r\n\t                //}\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    TaskListComponent.prototype.openSnackBar = function () {\r\n\t        this.snackBar.open('Task(s) approved.', '', {\r\n\t            duration: 2000\r\n\t        });\r\n\t        //this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n\t        //    duration: 500,\r\n\t        //});\r\n\t    };\r\n\t    TaskListComponent.prototype.ngOnInit = function () {\r\n\t        main_1.LicenseManager.setLicenseKey('ag-Grid_EvaluationLicense_100Devs27_January_2018__MTUxNzAxMTIwMDAwMA==8c9dff17620c1f17c7c34cb69061acb6');\r\n\t        //if (this.store.workflowTasks.getValue() == [] || this.store.workflowTasks.getValue().length == 0) {\r\n\t        this.workflowService.getPendingTasks();\r\n\t        //.subscribe(tasks => {\r\n\t        //    this.gridOptions.api.setRowData(tasks);\r\n\t        //});\r\n\t        //}\r\n\t    };\r\n\t    TaskListComponent.prototype.ngDoCheck = function () {\r\n\t        console.log('Change detector run...');\r\n\t    };\r\n\t    TaskListComponent.prototype.ngOnDestroy = function () {\r\n\t        this.subscription.unsubscribe();\r\n\t        //this.storeHelper.update('tasks', []);\r\n\t    };\r\n\t    TaskListComponent.prototype.dateComparator = function (date1, date2) {\r\n\t        function monthToComparableNumber(date) {\r\n\t            if (date === undefined || date === null || date.length !== 10) {\r\n\t                return null;\r\n\t            }\r\n\t            var yearNumber = date.substring(6, 10);\r\n\t            var monthNumber = date.substring(3, 5);\r\n\t            var dayNumber = date.substring(0, 2);\r\n\t            var result = (yearNumber * 10000) + (monthNumber * 100) + dayNumber;\r\n\t            return result;\r\n\t        }\r\n\t        var date1Number = monthToComparableNumber(date1);\r\n\t        var date2Number = monthToComparableNumber(date2);\r\n\t        if (date1Number === null && date2Number === null) {\r\n\t            return 0;\r\n\t        }\r\n\t        if (date1Number === null) {\r\n\t            return -1;\r\n\t        }\r\n\t        if (date2Number === null) {\r\n\t            return 1;\r\n\t        }\r\n\t        return date1Number - date2Number;\r\n\t    };\r\n\t    TaskListComponent.prototype.computeFromDate = function (params) {\r\n\t        function convertDate(inputFormat) {\r\n\t            function pad(s) {\r\n\t                return (s < 10) ? '0' + s : s;\r\n\t            }\r\n\t            var d = new Date(inputFormat);\r\n\t            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n\t        }\r\n\t        var fromDate = params.data.FromDate;\r\n\t        return convertDate(fromDate);\r\n\t    };\r\n\t    TaskListComponent.prototype.computeToDate = function (params) {\r\n\t        function convertDate(inputFormat) {\r\n\t            function pad(s) {\r\n\t                return (s < 10) ? '0' + s : s;\r\n\t            }\r\n\t            var d = new Date(inputFormat);\r\n\t            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n\t        }\r\n\t        var fromDate = params.data.ToDate;\r\n\t        return convertDate(fromDate);\r\n\t    };\r\n\t    //dataSource = {\r\n\t    //    //paginationPageSize: 10,\r\n\t    //    //overflowSize: 10,\r\n\t    //    getRows: (params: any) => {\r\n\t    //        //var filter = '';\r\n\t    //        //if (params.filterModel && params.filterModel.Name && params.filterModel.Name.filter) {\r\n\t    //        //    filter = params.filterModel.Name.filter;\r\n\t    //        //}\r\n\t    //        this.workflowService.getPendingTasks().subscribe(data => {\r\n\t    //            params.successCallback(data);\r\n\t    //        });\r\n\t    //    }\r\n\t    //}\r\n\t    TaskListComponent.prototype.onRowSelected = function () {\r\n\t    };\r\n\t    TaskListComponent.prototype.onRowClicked = function (event) {\r\n\t        var taskId = event.data.TaskId;\r\n\t        var instanceId = event.data.InstanceId;\r\n\t        this.router.navigate(['main/selfservice', 'taskdetails', taskId, instanceId]);\r\n\t    };\r\n\t    TaskListComponent.prototype.isButtonDisabled = function () {\r\n\t        this.index++;\r\n\t        console.log(this.index + \". Is button disabled\");\r\n\t        if (this.gridOptions && this.gridOptions.api) {\r\n\t            this.btnDisabled = false;\r\n\t            return !(this.gridOptions.api.getSelectedNodes().length > 0);\r\n\t        }\r\n\t        else {\r\n\t            this.btnDisabled = true;\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    TaskListComponent.prototype.approveRequests = function () {\r\n\t        var nodes = this.getSelectedTasks(true);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t    };\r\n\t    TaskListComponent.prototype.rejectRequests = function () {\r\n\t        var nodes = this.getSelectedTasks(false);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t    };\r\n\t    TaskListComponent.prototype.getSelectedTasks = function (isApproved) {\r\n\t        var selectedNodes = this.gridOptions.api.getSelectedNodes();\r\n\t        //this.store.workflowTasks\r\n\t        this.gridOptions.api.removeItems(selectedNodes);\r\n\t        //this.openSnackBar();\r\n\t        var tasks = [];\r\n\t        for (var i = 0; i < selectedNodes.length; i++) {\r\n\t            var data = selectedNodes[i].data;\r\n\t            var task = { 'TaskId': data.TaskId, 'IsApproved': isApproved, 'InstanceId': data.InstanceId, 'PersonId': data.PersonId };\r\n\t            tasks.push(task);\r\n\t        }\r\n\t        return tasks;\r\n\t    };\r\n\t    return TaskListComponent;\r\n\t}());\r\n\tTaskListComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'task-list',\r\n\t        changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n\t        styles: [\"\\n            .verticalLine {\\n              border-left: thick solid #ff0000;\\n            }\"\r\n\t        ],\r\n\t        template: \"\\n        <nav class=\\\"navbar navbar-light bg-faded\\\" style=\\\"display: none;\\\">\\n          <form class=\\\"form-inline\\\">\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Approve</button>\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Reject</button>\\n          </form>\\n        </nav>\\n\\n        <ag-grid-ng2 #agGrid style=\\\"width: 100%; height: 320px;\\\" class=\\\"ag-fresh\\\"\\n            [gridOptions]=\\\"gridOptions\\\" rowSelection=\\\"multiple\\\"\\n            (rowSelected)=\\\"onRowSelected()\\\" (rowClicked)=\\\"onRowClicked($event)\\\" paginationInitialRowCount=\\\"10\\\" \\n            suppressRowClickSelection=\\\"true\\\">\\n        </ag-grid-ng2>\\n\\n    <div style=\\\"width: 100%; text-align: right;\\\">\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Approve</button>\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Reject</button>\\n    </div>\\n\\n    <button kendoButton [primary]=\\\"true\\\">My Kendo UI Button</button>\\n\"\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [services_1.WorkflowService,\r\n\t        router_1.ActivatedRoute,\r\n\t        router_1.Router,\r\n\t        material_1.MdSnackBar,\r\n\t        services_2.SelfServiceStore,\r\n\t        services_2.StoreHelper])\r\n\t], TaskListComponent);\r\n\texports.TaskListComponent = TaskListComponent;\r\n\n\n/***/ },\n\n/***/ 640:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(41);\r\n\tvar newservice_1 = __webpack_require__(369);\r\n\tvar LoanRequestComponent = (function () {\r\n\t    function LoanRequestComponent(selfServiceService, newService) {\r\n\t        this.selfServiceService = selfServiceService;\r\n\t        this.newService = newService;\r\n\t    }\r\n\t    LoanRequestComponent.prototype.ngOnInit = function () {\r\n\t        this.employeeBalance = this.newService.getEmployeeBalance();\r\n\t    };\r\n\t    LoanRequestComponent.prototype.submitRequest = function () {\r\n\t        var properties = [];\r\n\t        properties.push({ name: 'Amount', value: '2000' });\r\n\t        properties.push({ name: 'Currencty', value: '4440a738-405b-453e-9fea-ce868a3d7aa3' });\r\n\t        properties.push({ name: 'IsAdvance', value: 'true' });\r\n\t        this.selfServiceService.submitRequest(\"4FF68A29-35E8-4426-B979-741172FB87CC\", \"40053                               \", properties).subscribe();\r\n\t    };\r\n\t    return LoanRequestComponent;\r\n\t}());\r\n\tLoanRequestComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'loan-request',\r\n\t        template: __webpack_require__(641)\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [services_1.SelfServiceService, newservice_1.NewService])\r\n\t], LoanRequestComponent);\r\n\texports.LoanRequestComponent = LoanRequestComponent;\r\n\n\n/***/ },\n\n/***/ 641:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form class=\\\"col-xs-6 shadow-2\\\" #authForm=\\\"ngForm\\\" (submit)=\\\"submitRequest()\\\">\\r\\n    <table cellspacing=\\\"5\\\" cellpadding=\\\"5\\\">\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label><input type=\\\"radio\\\" checked=\\\"checked\\\" required name=\\\"loantype\\\" value=\\\"1\\\" />Loan</label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label><input type=\\\"radio\\\" required name=\\\"loantype\\\" value=\\\"2\\\" />Advance loan</label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label for=\\\"inputAmount\\\">Amount</label>\\r\\n            </td>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <input id=\\\"inputAmount\\\" type=\\\"number\\\" step=\\\"0.01\\\" required />\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>\\r\\n                <label for=\\\"selectCurrency\\\">Currency</label>\\r\\n            </td>\\r\\n            <td>\\r\\n                <select id=\\\"selectCurrency\\\">\\r\\n                    <option>Lebanese Pound</option>\\r\\n                    <option>Dollar</option>\\r\\n                </select>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><label for=\\\"inputReason\\\">Reason</label></td>\\r\\n            <td>\\r\\n                <textarea id=\\\"inputReason\\\"></textarea>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"actions col-xs-12\\\">\\r\\n        <div class=\\\"row center-xs\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-light\\\">Sumbit</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n/***/ },\n\n/***/ 642:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = Object.setPrototypeOf ||\r\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(41);\r\n\tvar store_1 = __webpack_require__(66);\r\n\tvar services_2 = __webpack_require__(41);\r\n\tvar rxjs_1 = __webpack_require__(67);\r\n\t__webpack_require__(67);\r\n\tvar angular2localization_1 = __webpack_require__(371);\r\n\tvar SuperClass = (function (_super) {\r\n\t    __extends(SuperClass, _super);\r\n\t    function SuperClass(locale, localization) {\r\n\t        var _this = _super.call(this, locale, localization) || this;\r\n\t        _this.locale = locale;\r\n\t        _this.localization = localization;\r\n\t        _this.localization.translationProvider('./resources/locale-');\r\n\t        _this.localization.updateTranslation();\r\n\t        return _this;\r\n\t        //Reflect.getMetadata('property', this);\r\n\t    }\r\n\t    return SuperClass;\r\n\t}(angular2localization_1.Locale));\r\n\texports.SuperClass = SuperClass;\r\n\tvar LeaveRequestComponent = (function (_super) {\r\n\t    __extends(LeaveRequestComponent, _super);\r\n\t    function LeaveRequestComponent(selfServiceService, selfServiceStore, store, locale, localization) {\r\n\t        var _this = _super.call(this, locale, localization) || this;\r\n\t        _this.selfServiceService = selfServiceService;\r\n\t        _this.selfServiceStore = selfServiceStore;\r\n\t        _this.store = store;\r\n\t        _this.locale = locale;\r\n\t        _this.localization = localization;\r\n\t        _this.leaveSubmited = false;\r\n\t        _this.leaveTypes = [];\r\n\t        _this.selfServiceStore.userBalance = rxjs_1.Observable.of(0);\r\n\t        _this.selfServiceStore.employeeDayDuty = rxjs_1.Observable.of(0);\r\n\t        _this.localization.translationProvider('./resources/locale-');\r\n\t        _this.localization.updateTranslation();\r\n\t        return _this;\r\n\t    }\r\n\t    LeaveRequestComponent.prototype.isBtnDisabled = function () {\r\n\t        return true;\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.ngDoCheck = function () {\r\n\t        console.log('do check');\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.onLeaveTypeChange = function (leaveTypeId) {\r\n\t        this.selfServiceService.getUserBalance(leaveTypeId).subscribe();\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.ngOnInit = function () {\r\n\t        this.selfServiceService.getAttendanceTypes().subscribe();\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.onBlurMethod = function () {\r\n\t        if (this.leaveTypeId && this.fromDate && this.toDate) {\r\n\t            this.selfServiceService.getEmployeeDayDuty(this.leaveTypeId, this.fromDate, this.toDate).subscribe();\r\n\t        }\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.ngOnDestroy = function () {\r\n\t    };\r\n\t    LeaveRequestComponent.prototype.submitRequest = function () {\r\n\t        var properties = [];\r\n\t        properties.push({ name: 'DayDuty', value: this.selfServiceStore.employeeDayDuty.toString() });\r\n\t        properties.push({ name: 'FromDate', value: this.fromDate });\r\n\t        properties.push({ name: 'ToDate', value: this.toDate });\r\n\t        properties.push({ name: 'EquivalentHours', value: this.selfServiceStore.employeeDayDuty.toString() });\r\n\t        properties.push({ name: 'FullDay', value: '1' });\r\n\t        properties.push({ name: 'Balance', value: this.selfServiceStore.userBalance.toString() });\r\n\t        properties.push({ name: 'LeaveType', value: this.leaveTypeId });\r\n\t        properties.push({ name: 'Remarks', value: 'this is a test from angular2' });\r\n\t        this.selfServiceService.submitRequest('848ECD54-BF0B-4400-B842-7CA11559C5D8', \"40053                               \", properties).subscribe();\r\n\t        this.leaveSubmited = !this.leaveSubmited;\r\n\t    };\r\n\t    return LeaveRequestComponent;\r\n\t}(SuperClass));\r\n\tLeaveRequestComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'leave-request',\r\n\t        changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n\t        template: __webpack_require__(643)\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [services_1.SelfServiceService, services_2.SelfServiceStore,\r\n\t        store_1.Store, angular2localization_1.LocaleService, angular2localization_1.LocalizationService])\r\n\t], LeaveRequestComponent);\r\n\texports.LeaveRequestComponent = LeaveRequestComponent;\r\n\n\n/***/ },\n\n/***/ 643:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\r\\n    <form name=\\\"LeaveRequestForm\\\" class=\\\"col-xs-6 shadow-2\\\" #authForm=\\\"ngForm\\\" (submit)=\\\"submitRequest()\\\">\\r\\n        <div [hidden]=\\\"leaveSubmited\\\">\\r\\n            <table cellspacing=\\\"5\\\" cellpadding=\\\"5\\\">\\r\\n                <tr>\\r\\n                    <td style=\\\"width: 400px\\\">\\r\\n                        <label for=\\\"inputLeaveType\\\">Leave Type</label>\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 400px\\\">\\r\\n                        <select id=\\\"inputLeaveType\\\" class=\\\"selectpicker\\\" name=\\\"inputLeaveType\\\" [(ngModel)]=\\\"leaveTypeId\\\" (change)=\\\"onLeaveTypeChange($event.target.value)\\\">\\r\\n                            <option *ngFor=\\\"let leaveType of store.leaveTypes | async\\\" [value]=\\\"leaveType.id\\\">{{leaveType.description}}</option>\\r\\n                        </select>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <label for=\\\"selectCurrency\\\">Balance</label>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtBalance\\\" value=\\\"{{ selfServiceStore.userBalance | async }}\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td><label for=\\\"inputReason\\\">From Date/To</label></td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtFromDate\\\" type=\\\"date\\\" name=\\\"txtFromDate\\\" (change)=\\\"onBlurMethod()\\\" [(ngModel)]=\\\"fromDate\\\" />\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtToDate\\\" type=\\\"date\\\" name=\\\"txtToDate\\\" (change)=\\\"onBlurMethod()\\\" [(ngModel)]=\\\"toDate\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td><label for=\\\"inputReason\\\">Duty Days</label></td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtToDate\\\" type=\\\"number\\\" name=\\\"txtDudyDays\\\" value=\\\"{{selfServiceStore.employeeDayDuty | async}}\\\" readonly=\\\"readonly\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div class=\\\"actions col-xs-12\\\">\\r\\n                <div class=\\\"row center-xs\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn-light\\\">Sumbit</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [hidden]=\\\"!leaveSubmited\\\" style=\\\"width: 500px\\\">\\r\\n            Your leave request is submitted successfully.\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"\n\n/***/ },\n\n/***/ 644:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(43);\r\n\tvar selfservice_1 = __webpack_require__(645);\r\n\tvar loanrequest_component_1 = __webpack_require__(640);\r\n\tvar leaverequest_component_1 = __webpack_require__(642);\r\n\tvar taskdetails_component_1 = __webpack_require__(646);\r\n\tvar tasklist2_component_1 = __webpack_require__(648);\r\n\tvar routes = [\r\n\t    { path: 'tasklist', component: selfservice_1.TaskListComponent },\r\n\t    { path: 'tasklist2', component: tasklist2_component_1.TaskList2Component },\r\n\t    { path: 'leaverequest', component: leaverequest_component_1.LeaveRequestComponent },\r\n\t    { path: 'loanrequest', component: loanrequest_component_1.LoanRequestComponent },\r\n\t    { path: 'taskdetails/:taskid/:instanceid', component: taskdetails_component_1.TaskDetailsComponent }\r\n\t];\r\n\tvar SelfServiceRoutingModule = (function () {\r\n\t    function SelfServiceRoutingModule() {\r\n\t    }\r\n\t    return SelfServiceRoutingModule;\r\n\t}());\r\n\tSelfServiceRoutingModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [router_1.RouterModule.forChild(routes)],\r\n\t        exports: [router_1.RouterModule]\r\n\t    })\r\n\t], SelfServiceRoutingModule);\r\n\texports.SelfServiceRoutingModule = SelfServiceRoutingModule;\r\n\n\n/***/ },\n\n/***/ 645:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar selfservice_module_1 = __webpack_require__(638);\r\n\texports.SelfServiceModule = selfservice_module_1.SelfServiceModule;\r\n\tvar selfservice_module_routing_1 = __webpack_require__(644);\r\n\texports.SelfServiceRoutingModule = selfservice_module_routing_1.SelfServiceRoutingModule;\r\n\tvar tasklist_component_1 = __webpack_require__(639);\r\n\texports.TaskListComponent = tasklist_component_1.TaskListComponent;\r\n\tvar loanrequest_component_1 = __webpack_require__(640);\r\n\texports.LoanRequestComponent = loanrequest_component_1.LoanRequestComponent;\r\n\tvar leaverequest_component_1 = __webpack_require__(642);\r\n\texports.LeaveRequestComponent = leaverequest_component_1.LeaveRequestComponent;\r\n\n\n/***/ },\n\n/***/ 646:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(41);\r\n\tvar services_2 = __webpack_require__(41);\r\n\tvar router_1 = __webpack_require__(43);\r\n\tvar TaskDetailsComponent = (function () {\r\n\t    function TaskDetailsComponent(workflowService, route, router, selfServiceStore, storeHelper) {\r\n\t        var _this = this;\r\n\t        this.workflowService = workflowService;\r\n\t        this.route = route;\r\n\t        this.router = router;\r\n\t        this.selfServiceStore = selfServiceStore;\r\n\t        this.storeHelper = storeHelper;\r\n\t        this.selfServiceStore.taskDetailsChanges.subscribe(function (instance) {\r\n\t            _this.instance = instance;\r\n\t        });\r\n\t    }\r\n\t    TaskDetailsComponent.prototype.ngOnInit = function () {\r\n\t        this.taskId = this.route.snapshot.params[\"taskid\"];\r\n\t        var instanceId = this.route.snapshot.params[\"instanceid\"];\r\n\t        this.workflowService.getRequestDetails(instanceId, this.taskId);\r\n\t    };\r\n\t    TaskDetailsComponent.prototype.approveRequest = function () {\r\n\t        var nodes = this.getTask(true);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t        this.router.navigate(['main/selfservice', 'tasklist', { id: this.taskId }]);\r\n\t    };\r\n\t    TaskDetailsComponent.prototype.rejectRequest = function () {\r\n\t        var nodes = this.getTask(false);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t        this.router.navigate(['main/selfservice', 'tasklist', { id: this.taskId }]);\r\n\t    };\r\n\t    TaskDetailsComponent.prototype.getTask = function (isApproved) {\r\n\t        var tasks = [];\r\n\t        var task = { 'TaskId': this.taskId, 'IsApproved': isApproved, 'InstanceId': this.instance.InstanceId, 'PersonId': this.instance.PersonId };\r\n\t        tasks.push(task);\r\n\t        return tasks;\r\n\t    };\r\n\t    TaskDetailsComponent.prototype.ngOnDestroy = function () {\r\n\t        this.selfServiceStore.taskDetails.next({});\r\n\t    };\r\n\t    return TaskDetailsComponent;\r\n\t}());\r\n\tTaskDetailsComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'taskdetails',\r\n\t        template: __webpack_require__(647),\r\n\t        styles: [\"\\n                td.container > div { width: 100%; height: 100%; overflow:hidden; }\\n                td.container { height: 50px; }\\n            \"],\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [services_1.WorkflowService,\r\n\t        router_1.ActivatedRoute,\r\n\t        router_1.Router,\r\n\t        services_2.SelfServiceStore,\r\n\t        services_2.StoreHelper])\r\n\t], TaskDetailsComponent);\r\n\texports.TaskDetailsComponent = TaskDetailsComponent;\r\n\n\n/***/ },\n\n/***/ 647:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<a routerLink=\\\"../../../tasklist\\\">Task List</a>\\r\\n<br /><br />\\r\\n\\r\\n<div *ngIf=\\\"instance && instance.PersonName\\\">\\r\\n    <h2>Process Information</h2>\\r\\n    <hr />\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Requested By</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.PersonName}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>Requested Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.RequestedDate}}\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Is On Behalf</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.IsOnBehalf}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>Status</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.TaskStatusDisplay}}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <br /><br />\\r\\n\\r\\n    <h2>Form</h2>\\r\\n    <hr />\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Leave Type</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.LeaveType}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Available Balance</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.AvailableBalance}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Duration</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                <span *ngIf=\\\"instance.IsFullDay\\\">{{instance.Duration}} Working Day(s)</span>\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.Duration}} Hour(s)</span>\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>From Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.FromDateDisplay}}\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.FromTimeDisplay}}</span>\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>To Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.FromDateDisplay}}\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.ToTimeDisplay}}</span>\\r\\n            </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Remark</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\" colspan=\\\"3\\\">\\r\\n                {{instance.Notes}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n    <br /><br />\\r\\n    <div style=\\\"width: 90%; text-align: right;\\\">\\r\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequest()\\\">Approve</button>\\r\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequest()\\\">Reject</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 648:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(41);\r\n\tvar services_2 = __webpack_require__(41);\r\n\tvar router_1 = __webpack_require__(43);\r\n\tvar material_1 = __webpack_require__(626);\r\n\t__webpack_require__(299);\r\n\tvar TaskList2Component = (function () {\r\n\t    function TaskList2Component(workflowService, route, router, snackBar, selfServiceStore, storeHelper) {\r\n\t        var _this = this;\r\n\t        this.workflowService = workflowService;\r\n\t        this.route = route;\r\n\t        this.router = router;\r\n\t        this.snackBar = snackBar;\r\n\t        this.selfServiceStore = selfServiceStore;\r\n\t        this.storeHelper = storeHelper;\r\n\t        this.gridData = [];\r\n\t        this.columnDefs = [\r\n\t            { checkboxSelection: true, headerCheckboxSelection: true, width: 30, maxWidth: 30 },\r\n\t            { headerName: 'Leave Type', field: 'LeaveType', filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Person Name', field: 'PersonName', filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Job', field: 'PersonJob', filterParams: { newRowsAction: 'keep' } },\r\n\t            {\r\n\t                headerName: 'From Date', filter: 'date',\r\n\t                valueGetter: this.computeFromDate,\r\n\t                comparator: this.dateComparator,\r\n\t                filterParams: {\r\n\t                    newRowsAction: 'keep',\r\n\t                    apply: true,\r\n\t                    comparator: function (filterLocalDateAtMidnight, cellValue) {\r\n\t                        var dateAsString = cellValue;\r\n\t                        var dateParts = dateAsString.split(\"/\");\r\n\t                        var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\r\n\t                        if (filterLocalDateAtMidnight.getTime() == cellDate.getTime()) {\r\n\t                            return 0;\r\n\t                        }\r\n\t                        if (cellDate < filterLocalDateAtMidnight) {\r\n\t                            return -1;\r\n\t                        }\r\n\t                        if (cellDate > filterLocalDateAtMidnight) {\r\n\t                            return 1;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            { headerName: 'To Date', valueGetter: this.computeToDate, comparator: this.dateComparator, filterParams: { newRowsAction: 'keep' } },\r\n\t            { headerName: 'Status', field: 'TaskStatusDisplay', filterParams: { newRowsAction: 'keep' } }\r\n\t        ];\r\n\t        this.gridOptions = {\r\n\t            columnDefs: this.columnDefs,\r\n\t            rowData: null,\r\n\t            api: null,\r\n\t            enableSorting: true,\r\n\t            rowHeight: 32,\r\n\t            headerHeight: 32,\r\n\t            enableFilter: true //,\r\n\t            //paginationPageSize: 10,\r\n\t            //animateRows: true//,\r\n\t            //rowModelType: 'pagination'\r\n\t            //enableServerSideSorting: true,\r\n\t            //enableServerSideFilter: true\r\n\t        };\r\n\t        this.index = 0;\r\n\t        this.subscription = this.selfServiceStore.workflowTasksChanges.subscribe(function (tasks) {\r\n\t            if (tasks) {\r\n\t                //if (this.gridOptions && this.gridOptions.api) {\r\n\t                _this.route.params\r\n\t                    .map(function (params) { return params['id']; })\r\n\t                    .subscribe(function (id) {\r\n\t                    var selectedTask;\r\n\t                    for (var i = 0, len = tasks.length; i < len; i++) {\r\n\t                        if (tasks[i].TaskId == id) {\r\n\t                            selectedTask = tasks[i];\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if (selectedTask) {\r\n\t                        var index = tasks.indexOf(selectedTask);\r\n\t                        tasks.splice(index, 1);\r\n\t                    }\r\n\t                });\r\n\t                _this.gridData = tasks;\r\n\t                //this.gridOptions.api.setRowData(tasks);\r\n\t                //}\r\n\t                //else {\r\n\t                //this.rowData = tasks;\r\n\t                //console.log('tasks filled...');\r\n\t                //setTimeout('this.gridOptions.api.setRowData(tasks);', 1000);\r\n\t                //}\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    TaskList2Component.prototype.openSnackBar = function () {\r\n\t        this.snackBar.open('Task(s) approved.', '', {\r\n\t            duration: 2000\r\n\t        });\r\n\t        //this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n\t        //    duration: 500,\r\n\t        //});\r\n\t    };\r\n\t    TaskList2Component.prototype.ngOnInit = function () {\r\n\t        //LicenseManager.setLicenseKey('ag-Grid_EvaluationLicense_100Devs27_January_2018__MTUxNzAxMTIwMDAwMA==8c9dff17620c1f17c7c34cb69061acb6');\r\n\t        //if (this.store.workflowTasks.getValue() == [] || this.store.workflowTasks.getValue().length == 0) {\r\n\t        this.workflowService.getPendingTasks();\r\n\t        //.subscribe(tasks => {\r\n\t        //    this.gridOptions.api.setRowData(tasks);\r\n\t        //});\r\n\t        //}\r\n\t    };\r\n\t    TaskList2Component.prototype.ngDoCheck = function () {\r\n\t        console.log('Change detector run...');\r\n\t    };\r\n\t    TaskList2Component.prototype.ngOnDestroy = function () {\r\n\t        this.subscription.unsubscribe();\r\n\t        //this.storeHelper.update('tasks', []);\r\n\t    };\r\n\t    TaskList2Component.prototype.dateComparator = function (date1, date2) {\r\n\t        function monthToComparableNumber(date) {\r\n\t            if (date === undefined || date === null || date.length !== 10) {\r\n\t                return null;\r\n\t            }\r\n\t            var yearNumber = date.substring(6, 10);\r\n\t            var monthNumber = date.substring(3, 5);\r\n\t            var dayNumber = date.substring(0, 2);\r\n\t            var result = (yearNumber * 10000) + (monthNumber * 100) + dayNumber;\r\n\t            return result;\r\n\t        }\r\n\t        var date1Number = monthToComparableNumber(date1);\r\n\t        var date2Number = monthToComparableNumber(date2);\r\n\t        if (date1Number === null && date2Number === null) {\r\n\t            return 0;\r\n\t        }\r\n\t        if (date1Number === null) {\r\n\t            return -1;\r\n\t        }\r\n\t        if (date2Number === null) {\r\n\t            return 1;\r\n\t        }\r\n\t        return date1Number - date2Number;\r\n\t    };\r\n\t    TaskList2Component.prototype.computeFromDate = function (params) {\r\n\t        function convertDate(inputFormat) {\r\n\t            function pad(s) {\r\n\t                return (s < 10) ? '0' + s : s;\r\n\t            }\r\n\t            var d = new Date(inputFormat);\r\n\t            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n\t        }\r\n\t        var fromDate = params.data.FromDate;\r\n\t        return convertDate(fromDate);\r\n\t    };\r\n\t    TaskList2Component.prototype.computeToDate = function (params) {\r\n\t        function convertDate(inputFormat) {\r\n\t            function pad(s) {\r\n\t                return (s < 10) ? '0' + s : s;\r\n\t            }\r\n\t            var d = new Date(inputFormat);\r\n\t            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n\t        }\r\n\t        var fromDate = params.data.ToDate;\r\n\t        return convertDate(fromDate);\r\n\t    };\r\n\t    TaskList2Component.prototype.onRowSelected = function () {\r\n\t    };\r\n\t    TaskList2Component.prototype.onRowClicked = function (event) {\r\n\t        var taskId = event.data.TaskId;\r\n\t        var instanceId = event.data.InstanceId;\r\n\t        this.router.navigate(['main/selfservice', 'taskdetails', taskId, instanceId]);\r\n\t    };\r\n\t    TaskList2Component.prototype.isButtonDisabled = function () {\r\n\t        this.index++;\r\n\t        console.log(this.index + \". Is button disabled\");\r\n\t        if (this.gridOptions && this.gridOptions.api) {\r\n\t            this.btnDisabled = false;\r\n\t            return !(this.gridOptions.api.getSelectedNodes().length > 0);\r\n\t        }\r\n\t        else {\r\n\t            this.btnDisabled = true;\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    TaskList2Component.prototype.approveRequests = function () {\r\n\t        var nodes = this.getSelectedTasks(true);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t    };\r\n\t    TaskList2Component.prototype.rejectRequests = function () {\r\n\t        var nodes = this.getSelectedTasks(false);\r\n\t        this.workflowService.approveRequests(nodes).subscribe();\r\n\t    };\r\n\t    TaskList2Component.prototype.getSelectedTasks = function (isApproved) {\r\n\t        var selectedNodes = this.gridOptions.api.getSelectedNodes();\r\n\t        //this.store.workflowTasks\r\n\t        this.gridOptions.api.removeItems(selectedNodes);\r\n\t        //this.openSnackBar();\r\n\t        var tasks = [];\r\n\t        for (var i = 0; i < selectedNodes.length; i++) {\r\n\t            var data = selectedNodes[i].data;\r\n\t            var task = { 'TaskId': data.TaskId, 'IsApproved': isApproved, 'InstanceId': data.InstanceId, 'PersonId': data.PersonId };\r\n\t            tasks.push(task);\r\n\t        }\r\n\t        return tasks;\r\n\t    };\r\n\t    return TaskList2Component;\r\n\t}());\r\n\t__decorate([\r\n\t    core_1.Input(),\r\n\t    __metadata(\"design:type\", Array)\r\n\t], TaskList2Component.prototype, \"gridData\", void 0);\r\n\tTaskList2Component = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'task-list2',\r\n\t        changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n\t        styles: [\"\\n            .verticalLine {\\n              border-left: thick solid #ff0000;\\n            }\"\r\n\t        ],\r\n\t        template: \"\\n        <nav class=\\\"navbar navbar-light bg-faded\\\" style=\\\"display: none;\\\">\\n          <form class=\\\"form-inline\\\">\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Approve</button>\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Reject</button>\\n          </form>\\n        </nav>\\n\\n        <kendo-grid [data]=\\\"gridData\\\" [height]=\\\"370\\\">\\n          <kendo-grid-column field=\\\"LeaveType\\\" title=\\\"Leave Type\\\" width=\\\"40\\\">\\n          </kendo-grid-column>\\n          <kendo-grid-column field=\\\"PersonName\\\" title=\\\"Person Name\\\" width=\\\"250\\\">\\n          </kendo-grid-column>\\n          <kendo-grid-column field=\\\"PersonJob\\\" title=\\\"Job\\\">\\n          </kendo-grid-column>\\n          <kendo-grid-column field=\\\"FromDate\\\" title=\\\"FromDate\\\" width=\\\"80\\\">\\n          </kendo-grid-column>\\n          <kendo-grid-column field=\\\"ToDate\\\" title=\\\"ToDate\\\" width=\\\"80\\\">\\n          </kendo-grid-column>\\n        </kendo-grid>\\n\\n    <div style=\\\"width: 100%; text-align: right;\\\">\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Approve</button>\\n            <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequests()\\\" [disabled]=\\\"isButtonDisabled()\\\">Reject</button>\\n    </div>\\n\\n    <button kendoButton [primary]=\\\"true\\\">My Kendo UI Button</button>\\n\"\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [services_1.WorkflowService,\r\n\t        router_1.ActivatedRoute,\r\n\t        router_1.Router,\r\n\t        material_1.MdSnackBar,\r\n\t        services_2.SelfServiceStore,\r\n\t        services_2.StoreHelper])\r\n\t], TaskList2Component);\r\n\texports.TaskList2Component = TaskList2Component;\r\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.chunk.js","import { NgModule }            from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser'\nimport { SharedModule } from '../shared';\nimport { TaskListComponent } from './tasklist.component';\nimport { LoanRequestComponent } from './loanrequest.component';\nimport { LeaveRequestComponent } from './leaverequest.component';\nimport { SelfServiceRoutingModule } from './selfservice-module.routing';\nimport { TaskDetailsComponent } from './taskdetails.component';\nimport { TaskList2Component } from './tasklist2.component';\nimport { LocaleModule, LocalizationModule, LocaleService, LocalizationService } from 'angular2localization';\r\n\n@NgModule({\n    imports: [SharedModule, SelfServiceRoutingModule],\n    declarations: [TaskListComponent, TaskList2Component, LoanRequestComponent, LeaveRequestComponent, TaskDetailsComponent]\n})\nexport class SelfServiceModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/selfservice.module.ts","import { Input, Component, OnInit, OnDestroy, AfterViewChecked, DoCheck, ChangeDetectionStrategy } from '@angular/core';\r\nimport { WorkflowService } from '../services';\r\nimport { Store }  from '../store';\r\nimport { StoreHelper, SelfServiceStore } from '../services';\r\nimport { LicenseManager } from 'ag-grid-enterprise/main';\nimport { RowNode } from 'ag-grid/main';\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MdSnackBar } from '@angular/material';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\n@Component({\r\n    selector: 'task-list',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styles: [`\r\n            .verticalLine {\r\n              border-left: thick solid #ff0000;\r\n            }`\r\n    ],\r\n    template: `\r\n        <nav class=\"navbar navbar-light bg-faded\" style=\"display: none;\">\r\n          <form class=\"form-inline\">\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"approveRequests()\" [disabled]=\"isButtonDisabled()\">Approve</button>\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"rejectRequests()\" [disabled]=\"isButtonDisabled()\">Reject</button>\r\n          </form>\r\n        </nav>\r\n\r\n        <ag-grid-ng2 #agGrid style=\"width: 100%; height: 320px;\" class=\"ag-fresh\"\n            [gridOptions]=\"gridOptions\" rowSelection=\"multiple\"\n            (rowSelected)=\"onRowSelected()\" (rowClicked)=\"onRowClicked($event)\" paginationInitialRowCount=\"10\" \n            suppressRowClickSelection=\"true\">\n        </ag-grid-ng2>\r\n\r\n    <div style=\"width: 100%; text-align: right;\">\r\n        <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"approveRequests()\" [disabled]=\"isButtonDisabled()\">Approve</button>\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"rejectRequests()\" [disabled]=\"isButtonDisabled()\">Reject</button>\r\n    </div>\r\n\r\n    <button kendoButton [primary]=\"true\">My Kendo UI Button</button>\r\n`\r\n})\r\nexport class TaskListComponent implements OnInit, OnDestroy, DoCheck {\r\n    subscription: any;\r\n    btnDisabled: boolean;\r\n    rowData: any;\r\n\r\n    constructor(private workflowService: WorkflowService,\r\n        private route: ActivatedRoute,\n        private router: Router,\r\n        public snackBar: MdSnackBar,\r\n        private selfServiceStore: SelfServiceStore,\r\n        private storeHelper: StoreHelper) {\r\n\r\n        this.subscription = this.selfServiceStore.workflowTasksChanges.subscribe(tasks => {\r\n            if (tasks) {\r\n                if (this.gridOptions && this.gridOptions.api) {\r\n\r\n                    this.route.params\r\n                        .map(params => params['id'])\r\n                        .subscribe((id) => {\r\n                            let selectedTask: any;\r\n                            for (var i = 0, len = tasks.length; i < len; i++) {\r\n                                if (tasks[i].TaskId == id) {\r\n                                    selectedTask = tasks[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (selectedTask) {\r\n                                let index: number = tasks.indexOf(selectedTask);\r\n                                tasks.splice(index, 1);\r\n                            }\r\n                        });\r\n\r\n                    this.gridOptions.api.setRowData(tasks);\r\n                }\r\n                //else {\r\n                //this.rowData = tasks;\r\n                //console.log('tasks filled...');\r\n                //setTimeout('this.gridOptions.api.setRowData(tasks);', 1000);\r\n                //}\r\n            }\r\n        });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this.snackBar.open('Task(s) approved.', '', {\r\n            duration: 2000\r\n        });\r\n\r\n        //this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n        //    duration: 500,\r\n        //});\r\n    }\r\n\r\n    taskId: string;\r\n    ngOnInit() {\r\n        LicenseManager.setLicenseKey('ag-Grid_EvaluationLicense_100Devs27_January_2018__MTUxNzAxMTIwMDAwMA==8c9dff17620c1f17c7c34cb69061acb6');\r\n\r\n        //if (this.store.workflowTasks.getValue() == [] || this.store.workflowTasks.getValue().length == 0) {\r\n        \r\n        this.workflowService.getPendingTasks();\r\n        //.subscribe(tasks => {\r\n        //    this.gridOptions.api.setRowData(tasks);\r\n        //});\r\n        //}\r\n    }\r\n\r\n    ngDoCheck() {\r\n        console.log('Change detector run...');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        //this.storeHelper.update('tasks', []);\r\n    }\r\n\r\n    columnDefs = [\r\n        { checkboxSelection: true, headerCheckboxSelection: true, width: 30, maxWidth: 30 },\r\n        { headerName: 'Leave Type', field: 'LeaveType', filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Person Name', field: 'PersonName', filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Job', field: 'PersonJob', filterParams: { newRowsAction: 'keep' } },\r\n        {\r\n            headerName: 'From Date', filter: 'date',\r\n            valueGetter: this.computeFromDate,\r\n            comparator: this.dateComparator,\r\n            filterParams: {\r\n                newRowsAction: 'keep',\r\n                apply: true,\r\n                comparator: function (filterLocalDateAtMidnight, cellValue) {\r\n                    var dateAsString = cellValue;\r\n                    var dateParts = dateAsString.split(\"/\");\r\n                    var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\r\n\r\n                    if (filterLocalDateAtMidnight.getTime() == cellDate.getTime()) {\r\n                        return 0\r\n                    }\r\n\r\n                    if (cellDate < filterLocalDateAtMidnight) {\r\n                        return -1;\r\n                    }\r\n\r\n                    if (cellDate > filterLocalDateAtMidnight) {\r\n                        return 1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        { headerName: 'To Date', valueGetter: this.computeToDate, comparator: this.dateComparator, filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Status', field: 'TaskStatusDisplay', filterParams: { newRowsAction: 'keep' } }\r\n    ];\r\n\r\n    dateComparator(date1, date2) {\r\n        function monthToComparableNumber(date) {\r\n            if (date === undefined || date === null || date.length !== 10) {\r\n                return null;\r\n            }\r\n\r\n            var yearNumber = date.substring(6, 10);\r\n            var monthNumber = date.substring(3, 5);\r\n            var dayNumber = date.substring(0, 2);\r\n\r\n            var result = (yearNumber * 10000) + (monthNumber * 100) + dayNumber;\r\n            return result;\r\n        }\r\n\r\n        var date1Number = monthToComparableNumber(date1);\r\n        var date2Number = monthToComparableNumber(date2);\r\n\r\n        if (date1Number === null && date2Number === null) {\r\n            return 0;\r\n        }\r\n        if (date1Number === null) {\r\n            return -1;\r\n        }\r\n        if (date2Number === null) {\r\n            return 1;\r\n        }\r\n\r\n        return date1Number - date2Number;\r\n    }\r\n\r\n    gridOptions = {\r\n        columnDefs: this.columnDefs,\r\n        rowData: null,\r\n        api: null,\r\n        enableSorting: true,\r\n        rowHeight: 32,\r\n        headerHeight: 32,\r\n        enableFilter: true//,\r\n        //paginationPageSize: 10,\r\n        //animateRows: true//,\r\n        //rowModelType: 'pagination'\r\n        //enableServerSideSorting: true,\r\n        //enableServerSideFilter: true\r\n    };\r\n\r\n    computeFromDate(params) {\r\n        function convertDate(inputFormat) {\r\n            function pad(s) {\r\n                return (s < 10) ? '0' + s : s;\r\n            }\r\n            var d = new Date(inputFormat);\r\n            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n        }\r\n\r\n        let fromDate = params.data.FromDate;\r\n        return convertDate(fromDate);\r\n    }\r\n\r\n    computeToDate(params) {\r\n        function convertDate(inputFormat) {\r\n            function pad(s) {\r\n                return (s < 10) ? '0' + s : s;\r\n            }\r\n            var d = new Date(inputFormat);\r\n            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n        }\r\n\r\n        let fromDate = params.data.ToDate;\r\n        return convertDate(fromDate);\r\n    }\r\n\r\n    //dataSource = {\r\n    //    //paginationPageSize: 10,\r\n    //    //overflowSize: 10,\r\n\r\n    //    getRows: (params: any) => {\r\n    //        //var filter = '';\r\n    //        //if (params.filterModel && params.filterModel.Name && params.filterModel.Name.filter) {\r\n    //        //    filter = params.filterModel.Name.filter;\r\n    //        //}\r\n\r\n    //        this.workflowService.getPendingTasks().subscribe(data => {\r\n    //            params.successCallback(data);\r\n    //        });\r\n    //    }\r\n    //}\r\n\r\n    onRowSelected() {\r\n\r\n    }\r\n\r\n    onRowClicked(event: any) {\r\n        let taskId = event.data.TaskId;\r\n        let instanceId = event.data.InstanceId;\r\n\r\n        this.router.navigate(['main/selfservice', 'taskdetails', taskId, instanceId]);\r\n    }\r\n\r\n    index: number = 0;\r\n    isButtonDisabled() {\r\n        this.index++;\r\n        console.log(`${this.index}. Is button disabled`);\r\n\r\n        if (this.gridOptions && this.gridOptions.api) {\r\n            this.btnDisabled = false;\r\n            return !(this.gridOptions.api.getSelectedNodes().length > 0);\r\n        }\r\n        else {\r\n            this.btnDisabled = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    approveRequests() {\r\n        let nodes: any[] = this.getSelectedTasks(true);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n    }\r\n\r\n    rejectRequests() {\r\n        let nodes: any[] = this.getSelectedTasks(false);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n    }\r\n\r\n    getSelectedTasks(isApproved: boolean) {\r\n        let selectedNodes: RowNode[] = this.gridOptions.api.getSelectedNodes();\r\n\r\n        //this.store.workflowTasks\r\n        this.gridOptions.api.removeItems(selectedNodes);\r\n\r\n        //this.openSnackBar();\r\n\r\n        let tasks: any[] = [];\r\n\r\n        for (let i = 0; i < selectedNodes.length; i++) {\r\n            let data = selectedNodes[i].data;\r\n\r\n            let task = { 'TaskId': data.TaskId, 'IsApproved': isApproved, 'InstanceId': data.InstanceId, 'PersonId': data.PersonId };\r\n\r\n            tasks.push(task);\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/tasklist.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SelfServiceService, ContentTypeProperty } from '../services';\r\nimport { NewService } from './newservice';\r\n\r\n@Component({\r\n    selector: 'loan-request',\r\n    template: require('./loanrequest.component.html')\r\n})\r\nexport class LoanRequestComponent implements OnInit {\r\n    constructor(private selfServiceService: SelfServiceService, private newService: NewService) {\r\n\r\n    }\r\n\r\n    employeeBalance: Number;\r\n    ngOnInit() {\r\n        this.employeeBalance = this.newService.getEmployeeBalance();\r\n    }\r\n\r\n    submitRequest() {\r\n        var properties: ContentTypeProperty[] = [];\r\n        properties.push({ name: 'Amount', value: '2000' });\r\n        properties.push({ name: 'Currencty', value: '4440a738-405b-453e-9fea-ce868a3d7aa3' });\r\n        properties.push({ name: 'IsAdvance', value: 'true' });\r\n\r\n        this.selfServiceService.submitRequest(\"4FF68A29-35E8-4426-B979-741172FB87CC\", \"40053                               \", properties).subscribe();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/loanrequest.component.ts","module.exports = \"<form class=\\\"col-xs-6 shadow-2\\\" #authForm=\\\"ngForm\\\" (submit)=\\\"submitRequest()\\\">\\r\\n    <table cellspacing=\\\"5\\\" cellpadding=\\\"5\\\">\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label><input type=\\\"radio\\\" checked=\\\"checked\\\" required name=\\\"loantype\\\" value=\\\"1\\\" />Loan</label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label><input type=\\\"radio\\\" required name=\\\"loantype\\\" value=\\\"2\\\" />Advance loan</label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <label for=\\\"inputAmount\\\">Amount</label>\\r\\n            </td>\\r\\n            <td style=\\\"width: 400px\\\">\\r\\n                <input id=\\\"inputAmount\\\" type=\\\"number\\\" step=\\\"0.01\\\" required />\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>\\r\\n                <label for=\\\"selectCurrency\\\">Currency</label>\\r\\n            </td>\\r\\n            <td>\\r\\n                <select id=\\\"selectCurrency\\\">\\r\\n                    <option>Lebanese Pound</option>\\r\\n                    <option>Dollar</option>\\r\\n                </select>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><label for=\\\"inputReason\\\">Reason</label></td>\\r\\n            <td>\\r\\n                <textarea id=\\\"inputReason\\\"></textarea>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"actions col-xs-12\\\">\\r\\n        <div class=\\\"row center-xs\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-light\\\">Sumbit</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/selfservice/loanrequest.component.html\n// module id = 641\n// module chunks = 1","import { Component, OnInit, OnDestroy, DoCheck, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SelfServiceService, ContentTypeProperty } from '../services';\r\nimport { Store, LeaveType }  from '../store';\r\nimport { StoreHelper, SelfServiceStore } from '../services';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport 'rxjs/Rx';\r\nimport { LocaleService, Locale, LocalizationService } from 'angular2localization';\n\nexport class SuperClass extends Locale {\r\n    constructor(public locale: LocaleService, public localization: LocalizationService) {\r\n        super(locale, localization);\r\n\r\n        this.localization.translationProvider('./resources/locale-');\r\n        this.localization.updateTranslation();\r\n\r\n        //Reflect.getMetadata('property', this);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'leave-request',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: require('./leaverequest.component.html')\r\n})\r\nexport class LeaveRequestComponent extends SuperClass implements OnInit, OnDestroy, DoCheck {\r\n    leaveSubmited: Boolean = false;\r\n\r\n    leaveTypes: LeaveType[] = [];\r\n    subscription: any;\r\n    fromDate: string;\r\n    toDate: string;\r\n    leaveTypeId: string;\r\n\r\n    isBtnDisabled() {\r\n        return true;\r\n    }\r\n\r\n    ngDoCheck() {\r\n        console.log('do check');\r\n    }\r\n\r\n    constructor(private selfServiceService: SelfServiceService, private selfServiceStore: SelfServiceStore,\r\n        private store: Store, public locale: LocaleService, public localization: LocalizationService) {\r\n        super(locale, localization);\r\n\r\n        this.selfServiceStore.userBalance = Observable.of(0);\r\n        this.selfServiceStore.employeeDayDuty = Observable.of(0);\r\n\r\n        this.localization.translationProvider('./resources/locale-');\r\n        this.localization.updateTranslation();\r\n    }\r\n\r\n    onLeaveTypeChange(leaveTypeId) {\r\n        this.selfServiceService.getUserBalance(leaveTypeId).subscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.selfServiceService.getAttendanceTypes().subscribe();\r\n    }\r\n\r\n    onBlurMethod() {\r\n        if (this.leaveTypeId && this.fromDate && this.toDate) {\r\n            this.selfServiceService.getEmployeeDayDuty(this.leaveTypeId, this.fromDate, this.toDate).subscribe();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    submitRequest() {\r\n        var properties: ContentTypeProperty[] = [];\r\n        properties.push({ name: 'DayDuty', value: this.selfServiceStore.employeeDayDuty.toString() });\r\n        properties.push({ name: 'FromDate', value: this.fromDate });\r\n        properties.push({ name: 'ToDate', value: this.toDate });\r\n        properties.push({ name: 'EquivalentHours', value: this.selfServiceStore.employeeDayDuty.toString() });\r\n        properties.push({ name: 'FullDay', value: '1' });\r\n        properties.push({ name: 'Balance', value: this.selfServiceStore.userBalance.toString() });\r\n        properties.push({ name: 'LeaveType', value: this.leaveTypeId });\r\n        properties.push({ name: 'Remarks', value: 'this is a test from angular2' });\r\n\r\n        this.selfServiceService.submitRequest('848ECD54-BF0B-4400-B842-7CA11559C5D8', \"40053                               \", properties).subscribe();\r\n\r\n        this.leaveSubmited = !this.leaveSubmited;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/leaverequest.component.ts","module.exports = \"<div>\\r\\n    <form name=\\\"LeaveRequestForm\\\" class=\\\"col-xs-6 shadow-2\\\" #authForm=\\\"ngForm\\\" (submit)=\\\"submitRequest()\\\">\\r\\n        <div [hidden]=\\\"leaveSubmited\\\">\\r\\n            <table cellspacing=\\\"5\\\" cellpadding=\\\"5\\\">\\r\\n                <tr>\\r\\n                    <td style=\\\"width: 400px\\\">\\r\\n                        <label for=\\\"inputLeaveType\\\">Leave Type</label>\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 400px\\\">\\r\\n                        <select id=\\\"inputLeaveType\\\" class=\\\"selectpicker\\\" name=\\\"inputLeaveType\\\" [(ngModel)]=\\\"leaveTypeId\\\" (change)=\\\"onLeaveTypeChange($event.target.value)\\\">\\r\\n                            <option *ngFor=\\\"let leaveType of store.leaveTypes | async\\\" [value]=\\\"leaveType.id\\\">{{leaveType.description}}</option>\\r\\n                        </select>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <label for=\\\"selectCurrency\\\">Balance</label>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtBalance\\\" value=\\\"{{ selfServiceStore.userBalance | async }}\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td><label for=\\\"inputReason\\\">From Date/To</label></td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtFromDate\\\" type=\\\"date\\\" name=\\\"txtFromDate\\\" (change)=\\\"onBlurMethod()\\\" [(ngModel)]=\\\"fromDate\\\" />\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtToDate\\\" type=\\\"date\\\" name=\\\"txtToDate\\\" (change)=\\\"onBlurMethod()\\\" [(ngModel)]=\\\"toDate\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td><label for=\\\"inputReason\\\">Duty Days</label></td>\\r\\n                    <td>\\r\\n                        <input id=\\\"txtToDate\\\" type=\\\"number\\\" name=\\\"txtDudyDays\\\" value=\\\"{{selfServiceStore.employeeDayDuty | async}}\\\" readonly=\\\"readonly\\\" />\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div class=\\\"actions col-xs-12\\\">\\r\\n                <div class=\\\"row center-xs\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn-light\\\">Sumbit</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [hidden]=\\\"!leaveSubmited\\\" style=\\\"width: 500px\\\">\\r\\n            Your leave request is submitted successfully.\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/selfservice/leaverequest.component.html\n// module id = 643\n// module chunks = 1","import { NgModule }     from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskListComponent } from '../selfservice';\nimport { LoanRequestComponent } from './loanrequest.component';\nimport { LeaveRequestComponent } from './leaverequest.component';\nimport { TaskDetailsComponent } from './taskdetails.component';\nimport { TaskList2Component } from './tasklist2.component';\n\nconst routes: Routes = [\n    { path: 'tasklist', component: TaskListComponent },\n    { path: 'tasklist2', component: TaskList2Component },\n    { path: 'leaverequest', component: LeaveRequestComponent },\n    { path: 'loanrequest', component: LoanRequestComponent },\n    { path: 'taskdetails/:taskid/:instanceid', component: TaskDetailsComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SelfServiceRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/selfservice-module.routing.ts","export { SelfServiceModule } from './selfservice.module';\r\nexport { SelfServiceRoutingModule }  from './selfservice-module.routing';\r\nexport { TaskListComponent } from './tasklist.component';\r\nexport { LoanRequestComponent } from './loanrequest.component';\r\nexport { LeaveRequestComponent } from './leaverequest.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/index.ts","import { Component, OnInit, OnDestroy, HostBinding } from '@angular/core';\r\nimport { WorkflowService } from '../services';\r\nimport { Store }  from '../store';\r\nimport { StoreHelper, SelfServiceStore } from '../services';\r\nimport { LicenseManager } from 'ag-grid-enterprise/main';\nimport { ActivatedRoute, Router }    from '@angular/router';\n\r\n@Component({\r\n    selector: 'taskdetails',\r\n    template: require('./taskdetails.component.html'),\r\n    styles: [`\r\n                td.container > div { width: 100%; height: 100%; overflow:hidden; }\r\n                td.container { height: 50px; }\r\n            `],\r\n})\r\nexport class TaskDetailsComponent implements OnInit, OnDestroy {\r\n    instance: any;\r\n    taskId: string;\r\n\r\n    constructor(private workflowService: WorkflowService,\r\n        private route: ActivatedRoute,\n        private router: Router,\n        private selfServiceStore: SelfServiceStore,\n        private storeHelper: StoreHelper) {\r\n\r\n        this.selfServiceStore.taskDetailsChanges.subscribe(instance => {\r\n            this.instance = instance;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.taskId = this.route.snapshot.params[\"taskid\"];\r\n        let instanceId = this.route.snapshot.params[\"instanceid\"];\r\n\r\n        this.workflowService.getRequestDetails(instanceId, this.taskId);\r\n    }\r\n\r\n    approveRequest() {\r\n        let nodes: any[] = this.getTask(true);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n\r\n        this.router.navigate(['main/selfservice', 'tasklist', { id: this.taskId }]);\r\n    }\r\n\r\n    rejectRequest() {\r\n        let nodes: any[] = this.getTask(false);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n\r\n        this.router.navigate(['main/selfservice', 'tasklist', { id: this.taskId }]);\r\n    }\r\n\r\n    getTask(isApproved: boolean) {\r\n        let tasks: any[] = [];\r\n\r\n        let task = { 'TaskId': this.taskId, 'IsApproved': isApproved, 'InstanceId': this.instance.InstanceId, 'PersonId': this.instance.PersonId };\r\n        tasks.push(task);\r\n\r\n        return tasks;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selfServiceStore.taskDetails.next({});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/taskdetails.component.ts","module.exports = \"<a routerLink=\\\"../../../tasklist\\\">Task List</a>\\r\\n<br /><br />\\r\\n\\r\\n<div *ngIf=\\\"instance && instance.PersonName\\\">\\r\\n    <h2>Process Information</h2>\\r\\n    <hr />\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Requested By</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.PersonName}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>Requested Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.RequestedDate}}\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Is On Behalf</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.IsOnBehalf}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>Status</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.TaskStatusDisplay}}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <br /><br />\\r\\n\\r\\n    <h2>Form</h2>\\r\\n    <hr />\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Leave Type</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.LeaveType}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Available Balance</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.AvailableBalance}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Duration</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                <span *ngIf=\\\"instance.IsFullDay\\\">{{instance.Duration}} Working Day(s)</span>\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.Duration}} Hour(s)</span>\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>From Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.FromDateDisplay}}\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.FromTimeDisplay}}</span>\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\">\\r\\n                <b>To Date</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\">\\r\\n                {{instance.FromDateDisplay}}\\r\\n                <span *ngIf=\\\"!instance.IsFullDay\\\">{{instance.ToTimeDisplay}}</span>\\r\\n            </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td width=\\\"120px\\\" height=\\\"25px\\\">\\r\\n                <b>Remark</b>\\r\\n            </td>\\r\\n            <td width=\\\"200px\\\" colspan=\\\"3\\\">\\r\\n                {{instance.Notes}}\\r\\n            </td>\\r\\n            <td width=\\\"120px\\\"></td>\\r\\n            <td width=\\\"200px\\\"></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n    <br /><br />\\r\\n    <div style=\\\"width: 90%; text-align: right;\\\">\\r\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"approveRequest()\\\">Approve</button>\\r\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" style=\\\"width: 100px\\\" (click)=\\\"rejectRequest()\\\">Reject</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/selfservice/taskdetails.component.html\n// module id = 647\n// module chunks = 1","import { Input, Component, OnInit, OnDestroy, AfterViewChecked, DoCheck, ChangeDetectionStrategy } from '@angular/core';\r\nimport { WorkflowService } from '../services';\r\nimport { Store }  from '../store';\r\nimport { StoreHelper, SelfServiceStore } from '../services';\r\nimport { LicenseManager } from 'ag-grid-enterprise/main';\nimport { RowNode } from 'ag-grid/main';\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {MdSnackBar} from '@angular/material';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\n@Component({\r\n    selector: 'task-list2',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styles: [`\r\n            .verticalLine {\r\n              border-left: thick solid #ff0000;\r\n            }`\r\n    ],\r\n    template: `\r\n        <nav class=\"navbar navbar-light bg-faded\" style=\"display: none;\">\r\n          <form class=\"form-inline\">\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"approveRequests()\" [disabled]=\"isButtonDisabled()\">Approve</button>\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"rejectRequests()\" [disabled]=\"isButtonDisabled()\">Reject</button>\r\n          </form>\r\n        </nav>\r\n\r\n        <kendo-grid [data]=\"gridData\" [height]=\"370\">\r\n          <kendo-grid-column field=\"LeaveType\" title=\"Leave Type\" width=\"40\">\r\n          </kendo-grid-column>\r\n          <kendo-grid-column field=\"PersonName\" title=\"Person Name\" width=\"250\">\r\n          </kendo-grid-column>\r\n          <kendo-grid-column field=\"PersonJob\" title=\"Job\">\r\n          </kendo-grid-column>\r\n          <kendo-grid-column field=\"FromDate\" title=\"FromDate\" width=\"80\">\r\n          </kendo-grid-column>\r\n          <kendo-grid-column field=\"ToDate\" title=\"ToDate\" width=\"80\">\r\n          </kendo-grid-column>\r\n        </kendo-grid>\r\n\r\n    <div style=\"width: 100%; text-align: right;\">\r\n        <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"approveRequests()\" [disabled]=\"isButtonDisabled()\">Approve</button>\r\n            <button class=\"btn btn-outline-success\" type=\"button\" style=\"width: 100px\" (click)=\"rejectRequests()\" [disabled]=\"isButtonDisabled()\">Reject</button>\r\n    </div>\r\n\r\n    <button kendoButton [primary]=\"true\">My Kendo UI Button</button>\r\n`\r\n})\r\nexport class TaskList2Component implements OnInit, OnDestroy, DoCheck {\r\n    subscription: any;\r\n    btnDisabled: boolean;\r\n    rowData: any;\r\n\r\n    @Input()\r\n    private gridData: any[] = [];\r\n\r\n    constructor(private workflowService: WorkflowService,\r\n        private route: ActivatedRoute,\n        private router: Router,\r\n        public snackBar: MdSnackBar,\r\n        private selfServiceStore: SelfServiceStore,\r\n        private storeHelper: StoreHelper) {\r\n\r\n        this.subscription = this.selfServiceStore.workflowTasksChanges.subscribe(tasks => {\r\n            if (tasks) {\r\n                //if (this.gridOptions && this.gridOptions.api) {\r\n\r\n                    this.route.params\r\n                        .map(params => params['id'])\r\n                        .subscribe((id) => {\r\n                            let selectedTask: any;\r\n                            for (var i = 0, len = tasks.length; i < len; i++) {\r\n                                if (tasks[i].TaskId == id) {\r\n                                    selectedTask = tasks[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (selectedTask) {\r\n                                let index: number = tasks.indexOf(selectedTask);\r\n                                tasks.splice(index, 1);\r\n                            }\r\n                        });\r\n\r\n                    this.gridData = tasks;\r\n\r\n                    //this.gridOptions.api.setRowData(tasks);\r\n                //}\r\n                //else {\r\n                //this.rowData = tasks;\r\n                //console.log('tasks filled...');\r\n                //setTimeout('this.gridOptions.api.setRowData(tasks);', 1000);\r\n                //}\r\n            }\r\n        });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this.snackBar.open('Task(s) approved.', '', {\r\n            duration: 2000\r\n        });\r\n\r\n        //this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n        //    duration: 500,\r\n        //});\r\n    }\r\n\r\n    taskId: string;\r\n    ngOnInit() {\r\n        //LicenseManager.setLicenseKey('ag-Grid_EvaluationLicense_100Devs27_January_2018__MTUxNzAxMTIwMDAwMA==8c9dff17620c1f17c7c34cb69061acb6');\r\n\r\n        //if (this.store.workflowTasks.getValue() == [] || this.store.workflowTasks.getValue().length == 0) {\r\n\r\n        this.workflowService.getPendingTasks();\r\n        //.subscribe(tasks => {\r\n        //    this.gridOptions.api.setRowData(tasks);\r\n        //});\r\n        //}\r\n    }\r\n\r\n    ngDoCheck() {\r\n        console.log('Change detector run...');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        //this.storeHelper.update('tasks', []);\r\n    }\r\n\r\n    columnDefs = [\r\n        { checkboxSelection: true, headerCheckboxSelection: true, width: 30, maxWidth: 30 },\r\n        { headerName: 'Leave Type', field: 'LeaveType', filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Person Name', field: 'PersonName', filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Job', field: 'PersonJob', filterParams: { newRowsAction: 'keep' } },\r\n        {\r\n            headerName: 'From Date', filter: 'date',\r\n            valueGetter: this.computeFromDate,\r\n            comparator: this.dateComparator,\r\n            filterParams: {\r\n                newRowsAction: 'keep',\r\n                apply: true,\r\n                comparator: function (filterLocalDateAtMidnight, cellValue) {\r\n                    var dateAsString = cellValue;\r\n                    var dateParts = dateAsString.split(\"/\");\r\n                    var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\r\n\r\n                    if (filterLocalDateAtMidnight.getTime() == cellDate.getTime()) {\r\n                        return 0\r\n                    }\r\n\r\n                    if (cellDate < filterLocalDateAtMidnight) {\r\n                        return -1;\r\n                    }\r\n\r\n                    if (cellDate > filterLocalDateAtMidnight) {\r\n                        return 1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        { headerName: 'To Date', valueGetter: this.computeToDate, comparator: this.dateComparator, filterParams: { newRowsAction: 'keep' } },\r\n        { headerName: 'Status', field: 'TaskStatusDisplay', filterParams: { newRowsAction: 'keep' } }\r\n    ];\r\n\r\n    dateComparator(date1, date2) {\r\n        function monthToComparableNumber(date) {\r\n            if (date === undefined || date === null || date.length !== 10) {\r\n                return null;\r\n            }\r\n\r\n            var yearNumber = date.substring(6, 10);\r\n            var monthNumber = date.substring(3, 5);\r\n            var dayNumber = date.substring(0, 2);\r\n\r\n            var result = (yearNumber * 10000) + (monthNumber * 100) + dayNumber;\r\n            return result;\r\n        }\r\n\r\n        var date1Number = monthToComparableNumber(date1);\r\n        var date2Number = monthToComparableNumber(date2);\r\n\r\n        if (date1Number === null && date2Number === null) {\r\n            return 0;\r\n        }\r\n        if (date1Number === null) {\r\n            return -1;\r\n        }\r\n        if (date2Number === null) {\r\n            return 1;\r\n        }\r\n\r\n        return date1Number - date2Number;\r\n    }\r\n\r\n    gridOptions = {\r\n        columnDefs: this.columnDefs,\r\n        rowData: null,\r\n        api: null,\r\n        enableSorting: true,\r\n        rowHeight: 32,\r\n        headerHeight: 32,\r\n        enableFilter: true//,\r\n        //paginationPageSize: 10,\r\n        //animateRows: true//,\r\n        //rowModelType: 'pagination'\r\n        //enableServerSideSorting: true,\r\n        //enableServerSideFilter: true\r\n    };\r\n\r\n    computeFromDate(params) {\r\n        function convertDate(inputFormat) {\r\n            function pad(s) {\r\n                return (s < 10) ? '0' + s : s;\r\n            }\r\n            var d = new Date(inputFormat);\r\n            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n        }\r\n\r\n        let fromDate = params.data.FromDate;\r\n        return convertDate(fromDate);\r\n    }\r\n\r\n    computeToDate(params) {\r\n        function convertDate(inputFormat) {\r\n            function pad(s) {\r\n                return (s < 10) ? '0' + s : s;\r\n            }\r\n            var d = new Date(inputFormat);\r\n            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n        }\r\n\r\n        let fromDate = params.data.ToDate;\r\n        return convertDate(fromDate);\r\n    }\r\n\r\n    onRowSelected() {\r\n\r\n    }\r\n\r\n    onRowClicked(event: any) {\r\n        let taskId = event.data.TaskId;\r\n        let instanceId = event.data.InstanceId;\r\n\r\n        this.router.navigate(['main/selfservice', 'taskdetails', taskId, instanceId]);\r\n    }\r\n\r\n    index: number = 0;\r\n    isButtonDisabled() {\r\n        this.index++;\r\n        console.log(`${this.index}. Is button disabled`);\r\n\r\n        if (this.gridOptions && this.gridOptions.api) {\r\n            this.btnDisabled = false;\r\n            return !(this.gridOptions.api.getSelectedNodes().length > 0);\r\n        }\r\n        else {\r\n            this.btnDisabled = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    approveRequests() {\r\n        let nodes: any[] = this.getSelectedTasks(true);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n    }\r\n\r\n    rejectRequests() {\r\n        let nodes: any[] = this.getSelectedTasks(false);\r\n        this.workflowService.approveRequests(nodes).subscribe();\r\n    }\r\n\r\n    getSelectedTasks(isApproved: boolean) {\r\n        let selectedNodes: RowNode[] = this.gridOptions.api.getSelectedNodes();\r\n\r\n        //this.store.workflowTasks\r\n        this.gridOptions.api.removeItems(selectedNodes);\r\n\r\n        //this.openSnackBar();\r\n\r\n        let tasks: any[] = [];\r\n\r\n        for (let i = 0; i < selectedNodes.length; i++) {\r\n            let data = selectedNodes[i].data;\r\n\r\n            let task = { 'TaskId': data.TaskId, 'IsApproved': isApproved, 'InstanceId': data.InstanceId, 'PersonId': data.PersonId };\r\n\r\n            tasks.push(task);\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/selfservice/tasklist2.component.ts"],"sourceRoot":""}