{"__symbolic":"module","version":1,"metadata":{"TableBodyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"[kendoGridTableBody]","template":"\n    <template ngFor\n        [ngForOf]=\"data\"\n        [ngForTrackBy]=\"trackByFn\"\n        let-item\n        let-odd=\"odd\">\n        <tr *ngIf=\"isGroup(item) && isParentGroupExpanded(item)\"\n            kendoGridGroupHeader\n            [columns]=\"columns\"\n            [groups]=\"groups\"\n            [item]=\"item\"\n            [skipGroupDecoration]=\"skipGroupDecoration\"\n            >\n        </tr>\n        <tr\n            *ngIf=\"isDataItem(item) && isInExpandedGroup(item)\"\n            [class.k-alt]=\"odd\"\n            [class.k-master-row]=\"detailTemplate?.templateRef\"\n            [kendoGridSelectable]=\"selectable\"\n            [index]=\"item.index\">\n            <template [ngIf]=\"!skipGroupDecoration\">\n                <td [class.k-group-cell]=\"true\" *ngFor=\"let g of groups\"></td>\n            </template>\n            <td [class.k-hierarchy-cell]=\"true\"\n                *ngIf=\"detailTemplate?.templateRef\">\n                <a class=\"k-icon\"\n                    [ngClass]=\"detailButtonStyles(item.index)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow(item.index, item.data)\"></a>\n            </td>\n            <td\n                [ngClass]=\"column.cssClass\"\n                [ngStyle]=\"column.style\"\n                *ngFor=\"let column of columns; let columnIndex = index\">\n                <template\n                    [templateContext]=\"{\n                        templateRef: column.templateRef,\n                        dataItem: item.data,\n                        column: column,\n                        columnIndex: columnIndex,\n                        rowIndex: item.index,\n                        $implicit: item.data\n                        }\">\n                </template>\n                <template [ngIf]=\"!column.templateRef\">{{item.data | valueOf: column.field: column.format}}</template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isDataItem(item) && detailTemplate?.templateRef && isExpanded(item.index)\"\n            [class.k-detail-row]=\"true\"\n            [class.k-alt]=\"odd\">\n            <td [class.k-group-cell]=\"true\" *ngFor=\"let g of groups\"></td>\n            <td [class.k-hierarchy-cell]=\"true\"></td>\n            <td [class.k-detail-cell]=\"true\"\n                [attr.colspan]=\"columns.length\">\n                <template\n                    [templateContext]=\"{\n                        templateRef: detailTemplate?.templateRef,\n                        dataItem: item.data,\n                        rowIndex: item.index,\n                        $implicit: item.data\n                        }\">\n                </template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isFooter(item) && (isInExpandedGroup(item) || (showGroupFooters && isParentGroupExpanded(item)))\" \n            [class.k-group-footer]=\"true\">\n            <template [ngIf]=\"!skipGroupDecoration\">\n                <td [class.k-group-cell]=\"true\" *ngFor=\"let g of groups\"></td>\n            </template>\n            <td [class.k-hierarchy-cell]=\"true\"\n                *ngIf=\"detailTemplate?.templateRef\">\n            </td>\n            <td\n                *ngFor=\"let column of columns; let columnIndex = index\">\n                <template\n                    [templateContext]=\"{\n                        templateRef: column.groupFooterTemplateRef,\n                        group: item.data,\n                        field: column.field,\n                        column: column,\n                        $implicit: item.data?.aggregates\n                        }\">\n                </template>\n           </td>\n        </tr>\n    </template>\n    "}]}],"members":{"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"detailTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"skip":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"skipGroupDecoration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showGroupFooters":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./details.service","name":"DetailsService"},{"__symbolic":"reference","module":"./grouping/groups.service","name":"GroupsService"},{"__symbolic":"reference","module":"./change-notification.service","name":"ChangeNotificationService"}]}],"toggleRow":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"isExpanded":[{"__symbolic":"method"}],"detailButtonStyles":[{"__symbolic":"method"}],"isGroup":[{"__symbolic":"method"}],"isDataItem":[{"__symbolic":"method"}],"isFooter":[{"__symbolic":"method"}],"isInExpandedGroup":[{"__symbolic":"method"}],"isParentGroupExpanded":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}}}}