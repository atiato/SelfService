/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
import { Pipe } from '@angular/core';
import { DatePipe } from '@angular/common';
import { IntlSupport } from '../services/Intl-support';
/**
 * LocaleDatePipe class.
Localizes dates.

\@author Roberto Simonetti
\@see Angular 2 DatePipe for further information
 */
export var LocaleDatePipe = (function () {
    function LocaleDatePipe() {
    }
    /**
     * LocaleDatePipe transform method.
    
    \@param value The date to be localized
    \@param defaultLocale The default locale
    \@param pattern The format of the date
    \@return The locale date
     * @param {?} value
     * @param {?} defaultLocale
     * @param {?=} pattern
     * @return {?}
     */
    LocaleDatePipe.prototype.transform = function (value, defaultLocale, pattern) {
        if (pattern === void 0) { pattern = 'mediumDate'; }
        // Checks for support for Intl.
        if (IntlSupport.DateTimeFormat(defaultLocale) == true) {
            var /** @type {?} */ localeDate = new DatePipe(defaultLocale);
            return localeDate.transform(value, pattern);
        }
        // Returns the date without localization.
        return value;
    };
    LocaleDatePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'localeDate',
                    pure: true
                },] },
    ];
    /** @nocollapse */
    LocaleDatePipe.ctorParameters = function () { return []; };
    return LocaleDatePipe;
}());
function LocaleDatePipe_tsickle_Closure_declarations() {
    /** @type {?} */
    LocaleDatePipe.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    LocaleDatePipe.ctorParameters;
}
//# sourceMappingURL=locale-date.pipe.js.map