{"version":3,"file":"locale-number.directive.js","sourceRoot":"","sources":["../../../src/directives/locale-number.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\nimport { Directive, ElementRef, Input, Renderer } from '@angular/core';\r\nimport { DecimalPipe, PercentPipe, CurrencyPipe } from '@angular/common';\r\n\r\n// Services.\r\nimport { LocaleDirective } from '../services/i18n';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { IntlSupport } from '../services/Intl-support';\n/**\n * LocaleDecimalDirective class.\rLocalizes decimal numbers by an attribute directive.\r\r\\@author Roberto Simonetti\n */\nexport class LocaleDecimalDirective extends LocaleDirective {\r\n\r\n     digits: string;\nprivate defaultDigits: string = null;\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public locale: LocaleService, el: ElementRef, renderer: Renderer) {\r\n        super(locale, el, renderer);\r\n    }\n/**\n * @param {?} renderNode\n * @param {?} value\n * @return {?}\n */\nlocalize(renderNode: any, value: string): void {\r\n\r\n        let /** @type {?} */ defaultLocale: string = this.locale.getDefaultLocale();\r\n\r\n        // Checks for support for Intl.\r\n        if (IntlSupport.NumberFormat(defaultLocale) == true) {\r\n\r\n            let /** @type {?} */ localeDecimal: DecimalPipe = new DecimalPipe(defaultLocale);\r\n\r\n            this.renderer.setText(renderNode, localeDecimal.transform(value, this.digits || this.defaultDigits));\r\n\r\n        }\r\n\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[localeDecimal]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'digits': [{ type: Input, args: ['localeDecimal', ] },],\n};\n}\n\nfunction LocaleDecimalDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDecimalDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDecimalDirective.ctorParameters;\n/** @type {?} */\nLocaleDecimalDirective.propDecorators;\n/** @type {?} */\nLocaleDecimalDirective.prototype.digits;\n/** @type {?} */\nLocaleDecimalDirective.prototype.defaultDigits;\n/** @type {?} */\nLocaleDecimalDirective.prototype.locale;\n}\n\n/**\n * LocalePercentDirective class.\rLocalizes percent numbers by an attribute directive.\r\r\\@author Roberto Simonetti\n */\nexport class LocalePercentDirective extends LocaleDirective {\r\n\r\n     digits: string;\nprivate defaultDigits: string = null;\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public locale: LocaleService, el: ElementRef, renderer: Renderer) {\r\n        super(locale, el, renderer);\r\n    }\n/**\n * @param {?} renderNode\n * @param {?} value\n * @return {?}\n */\nlocalize(renderNode: any, value: string): void {\r\n\r\n        let /** @type {?} */ defaultLocale: string = this.locale.getDefaultLocale();\r\n\r\n        // Checks for support for Intl.\r\n        if (IntlSupport.NumberFormat(defaultLocale) == true) {\r\n\r\n            let /** @type {?} */ localePercent: PercentPipe = new PercentPipe(defaultLocale);\r\n\r\n            this.renderer.setText(renderNode, localePercent.transform(value, this.digits || this.defaultDigits));\r\n\r\n        }\r\n\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[localePercent]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'digits': [{ type: Input, args: ['localePercent', ] },],\n};\n}\n\nfunction LocalePercentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalePercentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalePercentDirective.ctorParameters;\n/** @type {?} */\nLocalePercentDirective.propDecorators;\n/** @type {?} */\nLocalePercentDirective.prototype.digits;\n/** @type {?} */\nLocalePercentDirective.prototype.defaultDigits;\n/** @type {?} */\nLocalePercentDirective.prototype.locale;\n}\n\n/**\n * LocaleCurrencyDirective class.\rLocalizes currencies by an attribute directive.\r\r\\@author Roberto Simonetti\n */\nexport class LocaleCurrencyDirective extends LocaleDirective {\r\n\r\n     digits: string;\n/**\n * @param {?} symbolDisplay\n * @return {?}\n */\nset symbol(symbolDisplay: boolean) {\r\n        this.symbolDisplay = symbolDisplay || this.symbolDisplay;\r\n    }\nprivate symbolDisplay: boolean = false;\nprivate defaultDigits: string = null;\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public locale: LocaleService, el: ElementRef, renderer: Renderer) {\r\n        super(locale, el, renderer);\r\n    }\n/**\n * @param {?} renderNode\n * @param {?} value\n * @return {?}\n */\nlocalize(renderNode: any, value: string): void {\r\n\r\n        let /** @type {?} */ defaultLocale: string = this.locale.getDefaultLocale();\r\n        let /** @type {?} */ currency: string = this.locale.getCurrentCurrency();\r\n\r\n        // Checks for support for Intl.\r\n        if (IntlSupport.NumberFormat(defaultLocale) == true) {\r\n\r\n            let /** @type {?} */ localeCurrency: CurrencyPipe = new CurrencyPipe(defaultLocale);\r\n\r\n            this.renderer.setText(renderNode, localeCurrency.transform(value, currency, this.symbolDisplay, this.digits || this.defaultDigits));\r\n\r\n        }\r\n\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[localeCurrency]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'digits': [{ type: Input, args: ['localeCurrency', ] },],\n'symbol': [{ type: Input },],\n};\n}\n\nfunction LocaleCurrencyDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleCurrencyDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleCurrencyDirective.ctorParameters;\n/** @type {?} */\nLocaleCurrencyDirective.propDecorators;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.digits;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.symbolDisplay;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.defaultDigits;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}