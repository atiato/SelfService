{"version":3,"file":"translate.directive.js","sourceRoot":"","sources":["../../../src/directives/translate.directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAiB,MAAM,eAAe;OAG9E,EAAE,mBAAmB,EAAE,MAAM,kCAAkC;AACtE;;;;;GAKG;AACH;IAGA;;;;OAIG;IACH,4BAAmB,YAAiC,EAC5C,EAAc,EACd,QAAkB;QAFP,iBAAY,GAAZ,YAAY,CAAqB;QAC5C,OAAE,GAAF,EAAE,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAC/B;;OAEG;IACH,4CAAe,GAAf;QAAA,iBAaK;QAXG,IAAI,gBAAgB,CAAC,UAAU,GAAQ,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,gBAAgB,CAAC,GAAG,GAA2B,CAAW,UAAU,CAAC,SAAU,CAAC,CAAC;QAErF,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAC1C;YACI,KAAI,CAAC,SAAS,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IACL;;;;OAIG;IACK,sCAAS,GAAjB,UAAkB,UAAe,EAAE,GAAW;QAA9C,iBAQK;QANG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACxD,UAAC,KAAa;YACV,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CACJ,CAAC;IAEN,CAAC;IAEE,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,aAAa;iBAC1B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,mBAAmB,GAAG;QAC7B,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAJ6F,CAI7F,CAAC;IACK,iCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;KAClD,CAAC;IACF,yBAAC;AAAD,CAAC,AAzDD,IAyDC;AAED;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;IACpC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC1C,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,EAAE,CAAC;IAChC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;AACtC,CAAC","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\nimport { Directive, ElementRef, Input, Renderer, AfterViewInit } from '@angular/core';\r\n\r\n// Services.\r\nimport { LocalizationService } from '../services/localization.service';\n/**\n * TranslateDirective class.\rTranslate by an attribute directive.\r\r\\@author Roberto Simonetti\n */\nexport class TranslateDirective implements AfterViewInit {\r\n\r\n     params: string;\n/**\n * @param {?} localization\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public localization: LocalizationService,\nprivate el: ElementRef,\nprivate renderer: Renderer) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\r\n\r\n        let /** @type {?} */ renderNode: any = this.el.nativeElement.childNodes[0];\r\n        let /** @type {?} */ key: string = /** @type {?} */(( <string>renderNode.nodeValue));\r\n\r\n        this.translate(renderNode, key);\r\n\r\n        this.localization.translationChanged.subscribe(\r\n            () => {\r\n                this.translate(renderNode, key);\r\n            }\r\n        );\r\n\r\n    }\n/**\n * @param {?} renderNode\n * @param {?} key\n * @return {?}\n */\nprivate translate(renderNode: any, key: string): void {\r\n\r\n        this.localization.translateAsync(key, this.params).subscribe(\r\n            (value: string) => {\r\n                this.renderer.setText(renderNode, value);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[translate]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocalizationService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'params': [{ type: Input, args: ['translate', ] },],\n};\n}\n\nfunction TranslateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslateDirective.ctorParameters;\n/** @type {?} */\nTranslateDirective.propDecorators;\n/** @type {?} */\nTranslateDirective.prototype.params;\n/** @type {?} */\nTranslateDirective.prototype.localization;\n/** @type {?} */\nTranslateDirective.prototype.el;\n/** @type {?} */\nTranslateDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}