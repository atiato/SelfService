{"version":3,"file":"locale-date.directive.js","sourceRoot":"","sources":["../../../src/directives/locale-date.directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,eAAe;OAC/D,EAAE,QAAQ,EAAE,MAAM,iBAAiB;OAGnC,EAAE,eAAe,EAAE,MAAM,kBAAkB;OAC3C,EAAE,aAAa,EAAE,MAAM,4BAA4B;OACnD,EAAE,WAAW,EAAE,MAAM,0BAA0B;AACtD;;;;;GAKG;AACH;IAAyC,uCAAe;IAIxD;;;;OAIG;IACH,6BAAmB,MAAqB,EAAE,EAAc,EAAE,QAAkB;QACpE,kBAAM,MAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QADjB,WAAM,GAAN,MAAM,CAAe;QANhC,mBAAc,GAAW,YAAY,CAAC;IAQzC,CAAC;IACN;;;;OAIG;IACH,sCAAQ,GAAR,UAAS,UAAe,EAAE,KAAa;QAE/B,IAAI,gBAAgB,CAAC,aAAa,GAAW,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAE5E,+BAA+B;QAC/B,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAEpD,IAAI,gBAAgB,CAAC,UAAU,GAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC;YAExE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAExG,CAAC;IAEL,CAAC;IAEE,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,cAAc;iBAC3B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;QACvB,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAJ6F,CAI7F,CAAC;IACK,kCAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,YAAY,EAAG,EAAE,EAAE;KACpD,CAAC;IACF,0BAAC;AAAD,CAAC,AA9CD,CAAyC,eAAe,GA8CvD;AAED;IACA,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B;;;OAGG;IACH,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,cAAc,CAAC;IAC7C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC;AACrC,CAAC","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\nimport { Directive, ElementRef, Input, Renderer } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n// Services.\r\nimport { LocaleDirective } from '../services/i18n';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { IntlSupport } from '../services/Intl-support';\n/**\n * LocaleDateDirective class.\rLocalizes dates by an attribute directive.\r\r\\@author Roberto Simonetti\n */\nexport class LocaleDateDirective extends LocaleDirective {\r\n\r\n     pattern: string;\nprivate defaultPattern: string = 'mediumDate';\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public locale: LocaleService, el: ElementRef, renderer: Renderer) {\r\n        super(locale, el, renderer);\r\n     }\n/**\n * @param {?} renderNode\n * @param {?} value\n * @return {?}\n */\nlocalize(renderNode: any, value: string): void {\r\n\r\n        let /** @type {?} */ defaultLocale: string = this.locale.getDefaultLocale();\r\n\r\n        // Checks for support for Intl.\r\n        if (IntlSupport.DateTimeFormat(defaultLocale) == true) {\r\n\r\n            let /** @type {?} */ localeDate: DatePipe = new DatePipe(defaultLocale);\r\n\r\n            this.renderer.setText(renderNode, localeDate.transform(value, this.pattern || this.defaultPattern));\r\n\r\n        }\r\n\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[localeDate]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pattern': [{ type: Input, args: ['localeDate', ] },],\n};\n}\n\nfunction LocaleDateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDateDirective.ctorParameters;\n/** @type {?} */\nLocaleDateDirective.propDecorators;\n/** @type {?} */\nLocaleDateDirective.prototype.pattern;\n/** @type {?} */\nLocaleDateDirective.prototype.defaultPattern;\n/** @type {?} */\nLocaleDateDirective.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}