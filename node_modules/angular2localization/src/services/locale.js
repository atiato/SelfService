/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
/**
 * Locale superclass.
Provides the updates for localization.

Extend this class in components to provide lang, defaultLocale & currency to the pipes.

\@author Roberto Simonetti
 */
export var Locale = (function () {
    /**
     * @param {?=} locale
     * @param {?=} localization
     */
    function Locale(locale, localization) {
        var _this = this;
        this.locale = locale;
        this.localization = localization;
        if (this.localization != null) {
            this.lang = this.localization.languageCode;
            // When the language changes, subscribes to the event & updates lang property.
            this.localization.translationChanged.subscribe(
            // Generator or next.
            function (language) { _this.lang = language; });
        }
        if (this.locale != null) {
            this.defaultLocale = this.locale.getDefaultLocale();
            // When the default locale changes, subscribes to the event & updates defaultLocale property.
            this.locale.defaultLocaleChanged.subscribe(
            // Generator or next.
            function (defaultLocale) { _this.defaultLocale = defaultLocale; });
            this.currency = this.locale.getCurrentCurrency();
            // When the currency changes, subscribes to the event & updates currency property.
            this.locale.currencyCodeChanged.subscribe(
            // Generator or next.
            function (currency) { _this.currency = currency; });
        }
    }
    return Locale;
}());
function Locale_tsickle_Closure_declarations() {
    /**
     * Language code of the LocalizationService.
     * @type {?}
     */
    Locale.prototype.lang;
    /**
     * The default locale.
     * @type {?}
     */
    Locale.prototype.defaultLocale;
    /**
     * The current currency.
     * @type {?}
     */
    Locale.prototype.currency;
    /** @type {?} */
    Locale.prototype.locale;
    /** @type {?} */
    Locale.prototype.localization;
}
//# sourceMappingURL=locale.js.map