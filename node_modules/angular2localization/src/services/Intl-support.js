/**
 * IntlSupport class.
Provides the methods to check if Intl is supported.

\@author Roberto Simonetti
 */
export var IntlSupport = (function () {
    function IntlSupport() {
    }
    /**
     * Support for dates.
    
    \@param defaultLocale The default locale
    \@return True if the browser supports locales for dates, otherwise false.
     * @param {?} defaultLocale
     * @return {?}
     */
    IntlSupport.DateTimeFormat = function (defaultLocale) {
        // Checking for support.
        try {
            new Intl.DateTimeFormat(defaultLocale).format(new Date());
        }
        catch (e) {
            return false;
        }
        return true;
    };
    /**
     * Support for numbers.
    
    \@param defaultLocale The default locale
    \@return True if the browser supports locales for numbers, otherwise false.
     * @param {?} defaultLocale
     * @return {?}
     */
    IntlSupport.NumberFormat = function (defaultLocale) {
        // Checking for support.
        try {
            var /** @type {?} */ n = 0;
            new Intl.NumberFormat(defaultLocale).format(n);
        }
        catch (e) {
            return false;
        }
        return true;
    };
    /**
     * Support for Collator.
    
    \@param lang The current language code
    \@return True if the browser supports Collator, otherwise false.
     * @param {?} lang
     * @return {?}
     */
    IntlSupport.Collator = function (lang) {
        // Checking for support.
        try {
            var /** @type {?} */ value1 = "a";
            var /** @type {?} */ value2 = "b";
            new Intl.Collator(lang).compare(value1, value2);
        }
        catch (e) {
            return false;
        }
        return true;
    };
    return IntlSupport;
}());
//# sourceMappingURL=Intl-support.js.map