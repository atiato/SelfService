{"version":3,"file":"i18n.js","sourceRoot":"","sources":["../../../src/services/i18n.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAItC,EAAE,WAAW,EAAE,MAAM,0BAA0B;AACtD;;;;GAIG;AACH;IAIA;;OAEG;IACH,oBAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAJvB,WAAM,GAAW,QAAQ,CAAC;IAIC,CAAC;IAC7C;;;OAGG;IACO,oCAAe,GAAzB,UAA0B,GAAW;QAE7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAElB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAEhC,+BAA+B;YAC/B,IAAI,gBAAgB,CAAC,MAAM,GAAW,UAAU,CAAC,GAAG,CAAC,CAAC;YAEtD,gCAAgC;YAChC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAEjC,wCAAwC;YACxC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAErF,IAAI,gBAAgB,CAAC,aAAa,GAAgB,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAElG,wBAAwB;gBACxB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;YAExE,CAAC;QAEL,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IAEf,CAAC;IAEL,iBAAC;AAAD,CAAC,AAzCD,IAyCC;AAED;IACA,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAC5B,CAAC;AAED;;;;;GAKG;AACH;IACA;;;;OAIG;IACH,yBAAmB,MAAqB,EAAY,EAAc,EAAY,QAAkB;QAA7E,WAAM,GAAN,MAAM,CAAe;QAAY,OAAE,GAAF,EAAE,CAAY;QAAY,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IACrG;;OAEG;IACH,yCAAe,GAAf;QAAA,iBAaK;QAXG,IAAI,gBAAgB,CAAC,UAAU,GAAQ,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,gBAAgB,CAAC,KAAK,GAA2B,CAAW,UAAU,CAAC,SAAU,CAAC,CAAC;QAEvF,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,SAAS,CACtC;YACI,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC,CACJ,CAAC;IAEN,CAAC;IACL;;;;;OAKG;IACH,kCAAQ,GAAR,UAAS,UAAe,EAAE,KAAa,IAAG,CAAC;IAE3C,sBAAC;AAAD,CAAC,AAhCD,IAgCC;AAED;IACA,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC;IAC7B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnC,CAAC","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\nimport { ElementRef, Renderer, AfterViewInit } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\n// Services.\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { IntlSupport } from '../services/Intl-support';\n/**\n * I18nPlural superclass.\r\r\\@author Roberto Simonetti\n */\nexport class I18nPlural {\r\n\r\n    protected keyStr: string;\nprivate readonly REGEXP: RegExp = /^\\d+\\b/;\n/**\n * @param {?} locale\n */\nconstructor(public locale: LocaleService) { }\n/**\n * @param {?} key\n * @return {?}\n */\nprotected translateNumber(key: string): string {\r\n\r\n        this.keyStr = key;\r\n\r\n        if (this.REGEXP.exec(key) != null) {\r\n\r\n            // Tries to extract the number.\r\n            let /** @type {?} */ keyNum: number = parseFloat(key);\r\n\r\n            // Tries to extract the string. \r\n            this.keyStr = key.replace(this.REGEXP, \"\");\r\n            this.keyStr = this.keyStr.trim();\r\n\r\n            // Checks the number & support for Intl.\r\n            if (!isNaN(keyNum) && IntlSupport.NumberFormat(this.locale.getDefaultLocale()) == true) {\r\n\r\n                let /** @type {?} */ localeDecimal: DecimalPipe = new DecimalPipe(this.locale.getDefaultLocale());\r\n\r\n                // Localizes the number.\r\n                key = key.replace(/^\\d+/, localeDecimal.transform(keyNum, '1.0-3'));\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return key;\r\n\r\n    }\r\n\r\n}\n\nfunction I18nPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nPlural.prototype.keyStr;\n/** @type {?} */\nI18nPlural.prototype.REGEXP;\n/** @type {?} */\nI18nPlural.prototype.locale;\n}\n\n/**\n * LocaleDirective superclass.\r\r\\@author Roberto Simonetti\n * @abstract\n */\nexport abstract class LocaleDirective implements AfterViewInit {\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(public locale: LocaleService, protected el: ElementRef, protected renderer: Renderer) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\r\n\r\n        let /** @type {?} */ renderNode: any = this.el.nativeElement.childNodes[0];\r\n        let /** @type {?} */ value: string = /** @type {?} */(( <string>renderNode.nodeValue));\r\n\r\n        this.localize(renderNode, value);\r\n\r\n        this.locale.defaultLocaleChanged.subscribe(\r\n            () => {\r\n                this.localize(renderNode, value);\r\n            }\r\n        );\r\n\r\n    }\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} value\n * @return {?}\n */\nlocalize(renderNode: any, value: string) {}\r\n\r\n}\n\nfunction LocaleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDirective.prototype.locale;\n/** @type {?} */\nLocaleDirective.prototype.el;\n/** @type {?} */\nLocaleDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}