/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
import { DecimalPipe } from '@angular/common';
import { IntlSupport } from '../services/Intl-support';
/**
 * I18nPlural superclass.

\@author Roberto Simonetti
 */
export var I18nPlural = (function () {
    /**
     * @param {?} locale
     */
    function I18nPlural(locale) {
        this.locale = locale;
        this.REGEXP = /^\d+\b/;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    I18nPlural.prototype.translateNumber = function (key) {
        this.keyStr = key;
        if (this.REGEXP.exec(key) != null) {
            // Tries to extract the number.
            var /** @type {?} */ keyNum = parseFloat(key);
            // Tries to extract the string. 
            this.keyStr = key.replace(this.REGEXP, "");
            this.keyStr = this.keyStr.trim();
            // Checks the number & support for Intl.
            if (!isNaN(keyNum) && IntlSupport.NumberFormat(this.locale.getDefaultLocale()) == true) {
                var /** @type {?} */ localeDecimal = new DecimalPipe(this.locale.getDefaultLocale());
                // Localizes the number.
                key = key.replace(/^\d+/, localeDecimal.transform(keyNum, '1.0-3'));
            }
        }
        return key;
    };
    return I18nPlural;
}());
function I18nPlural_tsickle_Closure_declarations() {
    /** @type {?} */
    I18nPlural.prototype.keyStr;
    /** @type {?} */
    I18nPlural.prototype.REGEXP;
    /** @type {?} */
    I18nPlural.prototype.locale;
}
/**
 * LocaleDirective superclass.

\@author Roberto Simonetti
 * @abstract
 */
export var LocaleDirective = (function () {
    /**
     * @param {?} locale
     * @param {?} el
     * @param {?} renderer
     */
    function LocaleDirective(locale, el, renderer) {
        this.locale = locale;
        this.el = el;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    LocaleDirective.prototype.ngAfterViewInit = function () {
        var _this = this;
        var /** @type {?} */ renderNode = this.el.nativeElement.childNodes[0];
        var /** @type {?} */ value = (renderNode.nodeValue);
        this.localize(renderNode, value);
        this.locale.defaultLocaleChanged.subscribe(function () {
            _this.localize(renderNode, value);
        });
    };
    /**
     * @abstract
     * @param {?} renderNode
     * @param {?} value
     * @return {?}
     */
    LocaleDirective.prototype.localize = function (renderNode, value) { };
    return LocaleDirective;
}());
function LocaleDirective_tsickle_Closure_declarations() {
    /** @type {?} */
    LocaleDirective.prototype.locale;
    /** @type {?} */
    LocaleDirective.prototype.el;
    /** @type {?} */
    LocaleDirective.prototype.renderer;
}
//# sourceMappingURL=i18n.js.map